/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * InventoriesValue.java
 *
 * Created on Jan 31, 2012, 4:30:44 PM
 */
package vn.com.hkt.ap.gui.panel;

import java.awt.Dimension;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.List;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import org.openide.util.Lookup;
import vn.com.hkt.ap.Installer;
import vn.com.hkt.basic.api.IDepartmentBN;
import vn.com.hkt.basic.api.IEnterpriseBN;
import vn.com.hkt.basic.api.IProductBN;
import vn.com.hkt.pilot.entities.Department;
import vn.com.hkt.pilot.entities.Enterprise;
import vn.com.hkt.pilot.entities.Product;
import vn.com.hkt.ap.data.ProductStockCycle;
import vn.com.hkt.ap.finance.api.IInventoriesValueCaculator;
import vn.com.hkt.ap.gui.panel.model.InventoriesValueModelTable;
import vn.com.hkt.ap.finance.promotion.BusinessCycleUtil;
import vn.com.hkt.ap.finance.spi.InventoriesValueCaculator;
import vn.com.hkt.pilot.identity.presentation.api.IUserInterface;

/**
 *
 * @author Admin
 */
public class InventoriesValue extends javax.swing.JPanel implements IUserInterface {

    private IInventoriesValueCaculator inventoriesValueCaculator;
    private IDepartmentBN dbn;
    private Department departmentChoise;
    private IEnterpriseBN ebn;
    private Enterprise enterpriseChoise;
    private List<Department> departments;
    private IProductBN pbn;
    private Product productChoise;
    private List<Product> products;
    private int number = 1;
    private String timePeriod = BusinessCycleUtil.TIME_PERIOD_MONTH;
    List<ProductStockCycle> list;

    /** Creates new form InventoriesValue */
    public InventoriesValue(Enterprise enterprise) {
        initComponents();
        this.enterpriseChoise = enterprise;
        jTable1.getTableHeader().setPreferredSize(new Dimension(jTable1.getWidth(), 50));
        inventoriesValueCaculator = new InventoriesValueCaculator();
        dbn = Lookup.getDefault().lookup(IDepartmentBN.class);
        pbn = Lookup.getDefault().lookup(IProductBN.class);
        ebn = Lookup.getDefault().lookup(IEnterpriseBN.class);
        loadDepartment();
        loadCycle();

    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane2 = new javax.swing.JScrollPane();
        jPanel1 = new javax.swing.JPanel();
        cbDepartment = new javax.swing.JComboBox();
        jLabel1 = new javax.swing.JLabel();
        cbNumberTimePeriod = new javax.swing.JComboBox();
        cbTypeTimePeriod = new javax.swing.JComboBox();
        jLabel2 = new javax.swing.JLabel();
        jComboBox4 = new javax.swing.JComboBox();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        cbProduct = new javax.swing.JComboBox();

        setBorder(javax.swing.BorderFactory.createTitledBorder(null, org.openide.util.NbBundle.getMessage(InventoriesValue.class, "InventoriesValue.border.title"), javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION)); // NOI18N

        cbDepartment.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Combobox gì đây" }));
        cbDepartment.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cbDepartmentItemStateChanged(evt);
            }
        });

        jLabel1.setText(org.openide.util.NbBundle.getMessage(InventoriesValue.class, "InventoriesValue.jLabel1.text")); // NOI18N

        cbNumberTimePeriod.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12" }));
        cbNumberTimePeriod.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cbNumberTimePeriodItemStateChanged(evt);
            }
        });

        cbTypeTimePeriod.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Tháng", "Năm" }));
        cbTypeTimePeriod.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cbTypeTimePeriodItemStateChanged(evt);
            }
        });

        jLabel2.setText(org.openide.util.NbBundle.getMessage(InventoriesValue.class, "InventoriesValue.jLabel2.text")); // NOI18N

        jComboBox4.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Tính theo giá trị trung bình", "Tính theo giá trị thực tế" }));

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Thời gian", "<html>Số lượng <br>đầu kỳ</html>", "<html>Đơn hàng trung <br>bình đầu kỳ</html>", "Giá trị đầu kỳ", "<html>Số lượng tăng<br> trong kỳ</html>", "<html>Số lượng giảm<br> trong kỳ</html>", "<html>Số lượng tồn<br> trong kỳ</html>", "<html>Giá trị tăng<br> trong kỳ</html>", "<html>Giá trị giảm<br> trong kỳ</html>", "<html>Giá trị tăng<br>thực trong kỳ</html>", "<html>Giá trị giảm<br>thực trong kỳ</html>", "<html>Giá trị tồn<br>thực trong kỳ</html>", "<html>Giá trị tồn<br> cuối kì</html>"
            }
        ));
        jTable1.setRowMargin(5);
        jScrollPane1.setViewportView(jTable1);

        cbProduct.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Combobox gì đây" }));
        cbProduct.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cbProductItemStateChanged(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 933, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(cbDepartment, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cbProduct, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cbNumberTimePeriod, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cbTypeTimePeriod, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jComboBox4, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cbDepartment, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cbProduct, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1)
                    .addComponent(cbNumberTimePeriod, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cbTypeTimePeriod, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2)
                    .addComponent(jComboBox4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 366, Short.MAX_VALUE)
                .addContainerGap())
        );

        jScrollPane2.setViewportView(jPanel1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 955, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 428, Short.MAX_VALUE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void cbProductItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cbProductItemStateChanged
        productChoise = (Product) cbProduct.getSelectedItem();
        loadInvetoriesValue();
    }//GEN-LAST:event_cbProductItemStateChanged

    private void cbDepartmentItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cbDepartmentItemStateChanged
        departmentChoise = (Department) cbDepartment.getSelectedItem();
        loadProduct();
        loadInvetoriesValue();
    }//GEN-LAST:event_cbDepartmentItemStateChanged

    private void cbNumberTimePeriodItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cbNumberTimePeriodItemStateChanged
        number = (Integer) cbNumberTimePeriod.getSelectedItem();
        loadInvetoriesValue();
    }//GEN-LAST:event_cbNumberTimePeriodItemStateChanged

    private void cbTypeTimePeriodItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cbTypeTimePeriodItemStateChanged
        timePeriod = (String) cbTypeTimePeriod.getSelectedItem();
        loadInvetoriesValue();
    }//GEN-LAST:event_cbTypeTimePeriodItemStateChanged
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox cbDepartment;
    private javax.swing.JComboBox cbNumberTimePeriod;
    private javax.swing.JComboBox cbProduct;
    private javax.swing.JComboBox cbTypeTimePeriod;
    private javax.swing.JComboBox jComboBox4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables

    private void loadCycle() {
        DefaultComboBoxModel model1 = new DefaultComboBoxModel(new Object[]{BusinessCycleUtil.TIME_PERIOD_MONTH, BusinessCycleUtil.TIME_PERIOD_YEAR});
        cbTypeTimePeriod.setModel(model1);
        DefaultComboBoxModel model2 = new DefaultComboBoxModel(new Object[]{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12});
        cbNumberTimePeriod.setModel(model2);
        number = 1;
        timePeriod = BusinessCycleUtil.TIME_PERIOD_MONTH;
    }

    private void loadDepartment() {
        if (enterpriseChoise != null) {
            departments = dbn.select(Department.FIELD_ENTERPRISE_ID_ACTUAL, String.valueOf(enterpriseChoise.getId()));
            departments.add(0, null);
        } else {
            departments = new ArrayList<Department>();
        }
        DefaultComboBoxModel dcbm = new DefaultComboBoxModel(departments.toArray());
        cbDepartment.setModel(dcbm);
        if (!departments.isEmpty()) {
            cbDepartment.setSelectedIndex(0);
            departmentChoise = (Department) cbDepartment.getSelectedItem();
            loadProduct();
        }
    }

    private void loadProduct() {
        if (enterpriseChoise == null) {
            products = new ArrayList<Product>();
        } else {
            if (departmentChoise != null) {
                products = pbn.filterProductByDepartment(enterpriseChoise, departmentChoise);
            } else {
                products = pbn.select(Product.FIELD_ENTERPRISE_ID_ACTUAL, String.valueOf(enterpriseChoise.getId()));
            }
        }
        DefaultComboBoxModel model = new DefaultComboBoxModel(products.toArray());
        cbProduct.setModel(model);
        if (!products.isEmpty()) {
            cbProduct.setSelectedIndex(0);
            productChoise = (Product) cbProduct.getSelectedItem();
        }
    }

    public void loadInvetoriesValue() {
        if (productChoise == null) {
            JOptionPane.showMessageDialog(null, "Không có sản phẩm");
            list = new ArrayList<ProductStockCycle>();
        } else {
            inventoriesValueCaculator.setProductId(productChoise.getEnterpriseIdActual(),
                    productChoise.getDepartmentIdActual(), productChoise.getId());
            Calendar dateMark = Calendar.getInstance();
            dateMark.set(2010, 1, 1);
            inventoriesValueCaculator.setTimePeriod(dateMark, number, timePeriod);
            list = inventoriesValueCaculator.caculator();
        }
        InventoriesValueModelTable model = new InventoriesValueModelTable(list);
        jTable1.setModel(model);
    }

    @Override
    public String getUserInterfaceName() {
        return getClass().getSimpleName();
    }

    @Override
    public String getUserInterfaceDescription() {
        return "Giao diện thống kê hàng tồn kho";
    }

    @Override
    public String getModuleName() {
        return Installer.MODULE_NAME;
    }
}

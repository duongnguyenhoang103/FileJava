/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * PrimeValue.java
 *
 * Created on Jan 31, 2012, 4:31:02 PM
 */
package vn.com.hkt.ap.gui.panel;

import java.util.ArrayList;
import java.util.Calendar;
import java.util.List;
import javax.swing.DefaultComboBoxModel;
import org.openide.util.Lookup;
import vn.com.hkt.ap.Installer;
import vn.com.hkt.basic.api.IDepartmentBN;
import vn.com.hkt.pilot.entities.Department;
import vn.com.hkt.ap.data.BusinessCycle;
import vn.com.hkt.ap.finance.api.IPrimeValueCaculator;
import vn.com.hkt.ap.gui.panel.model.PrimeValueModelTable;
import vn.com.hkt.ap.finance.promotion.BusinessCycleUtil;
import vn.com.hkt.ap.finance.spi.PrimeVauleCaculator;
import vn.com.hkt.pilot.entities.Enterprise;
import vn.com.hkt.pilot.identity.presentation.api.IUserInterface;

/**
 *
 * @author Admin
 */
public final class PrimeValue extends javax.swing.JPanel implements IUserInterface {

    /**
     * Creates new form PrimeValue
     */
    private IDepartmentBN dbn;// truy xuất dữ liệu department
    private IPrimeValueCaculator primeValueCaculator;
    private Enterprise enterpriseChoise;
    private Department departmentChoise;// phòng ban được chọn
    private List<Department> departments;// danh sách các phòng ban
    private int number = 1;// mặc định khoảng cách kỳ kinh doanh là 1
    private String timePeriod = BusinessCycleUtil.TIME_PERIOD_MONTH;// tính theo hàng tháng
    private List<BusinessCycle> businessCycles;// danh sách kỳ kinh doanh

    public PrimeValue(Enterprise enterprise) {
        initComponents();
        this.enterpriseChoise = enterprise;
        primeValueCaculator = new PrimeVauleCaculator();
        dbn = Lookup.getDefault().lookup(IDepartmentBN.class);
        loadCycle();
        loadDepartment();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane2 = new javax.swing.JScrollPane();
        jPanel1 = new javax.swing.JPanel();
        cbDepartment = new javax.swing.JComboBox();
        jLabel1 = new javax.swing.JLabel();
        cbNumberTimePeriod = new javax.swing.JComboBox();
        cbTypeTimePeriod = new javax.swing.JComboBox();
        jScrollPane1 = new javax.swing.JScrollPane();
        table = new javax.swing.JTable();

        setBorder(javax.swing.BorderFactory.createTitledBorder(null, org.openide.util.NbBundle.getMessage(PrimeValue.class, "PrimeValue.border.title"), javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION)); // NOI18N

        cbDepartment.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Danh sách phòng ban" }));
        cbDepartment.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cbDepartmentItemStateChanged(evt);
            }
        });

        jLabel1.setText(org.openide.util.NbBundle.getMessage(PrimeValue.class, "PrimeValue.jLabel1.text")); // NOI18N

        cbNumberTimePeriod.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12" }));
        cbNumberTimePeriod.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cbNumberTimePeriodItemStateChanged(evt);
            }
        });

        cbTypeTimePeriod.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Tháng", "Năm" }));
        cbTypeTimePeriod.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cbTypeTimePeriodItemStateChanged(evt);
            }
        });

        table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Thời gian", "Giá trị đầu kỳ", "Phát sinh tăng trong kỳ", "Phát sinh giảm trong kỳ", "Giá trị cuối kỳ"
            }
        ));
        jScrollPane1.setViewportView(table);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 618, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(cbDepartment, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cbNumberTimePeriod, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cbTypeTimePeriod, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cbDepartment, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1)
                    .addComponent(cbNumberTimePeriod, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cbTypeTimePeriod, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 314, Short.MAX_VALUE)
                .addContainerGap())
        );

        jScrollPane2.setViewportView(jPanel1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jScrollPane2)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

private void cbDepartmentItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cbDepartmentItemStateChanged
    departmentChoise = (Department) cbDepartment.getSelectedItem();
    loadPrimeValue();
}//GEN-LAST:event_cbDepartmentItemStateChanged

private void cbNumberTimePeriodItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cbNumberTimePeriodItemStateChanged
    number = (Integer) cbNumberTimePeriod.getSelectedItem();
    loadPrimeValue();
}//GEN-LAST:event_cbNumberTimePeriodItemStateChanged

private void cbTypeTimePeriodItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cbTypeTimePeriodItemStateChanged
    timePeriod = (String) cbTypeTimePeriod.getSelectedItem();
    loadPrimeValue();
}//GEN-LAST:event_cbTypeTimePeriodItemStateChanged
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox cbDepartment;
    private javax.swing.JComboBox cbNumberTimePeriod;
    private javax.swing.JComboBox cbTypeTimePeriod;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable table;
    // End of variables declaration//GEN-END:variables

    private void loadCycle() {
        DefaultComboBoxModel model1 = new DefaultComboBoxModel(new Object[]{BusinessCycleUtil.TIME_PERIOD_MONTH, BusinessCycleUtil.TIME_PERIOD_YEAR});
        cbTypeTimePeriod.setModel(model1);
        DefaultComboBoxModel model2 = new DefaultComboBoxModel(new Object[]{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12});
        cbNumberTimePeriod.setModel(model2);
    }

    /**
     * load danh sách phòng ban vào combobox
     */
    private void loadDepartment() {
        if (enterpriseChoise == null) {
            departments = new ArrayList<Department>();
        } else {
            departments = dbn.select(Department.FIELD_ENTERPRISE_ID_ACTUAL, String.valueOf(enterpriseChoise.getId()));
        }
        departments.add(0, null);
        DefaultComboBoxModel dcbm = new DefaultComboBoxModel(departments.toArray());
        cbDepartment.setModel(dcbm);
        if (!departments.isEmpty()) {
            departmentChoise = departments.get(0);
            loadPrimeValue();
        }
    }

    /**
     * tính toán, load dữ liệu các kì kinh doanh
     */
    public void loadPrimeValue() {
        if (departmentChoise == null) {
            businessCycles = new ArrayList<BusinessCycle>();
        } else {
            primeValueCaculator.setDepartmentId(enterpriseChoise.getId(), departmentChoise.getId());
            Calendar dateMark = Calendar.getInstance();
            dateMark.set(2010, 1, 1);
            primeValueCaculator.setTimePeriod(dateMark, number, timePeriod);
            businessCycles = primeValueCaculator.caculator();
        }
        PrimeValueModelTable model = new PrimeValueModelTable(businessCycles);
        table.setModel(model);

    }

    @Override
    public String getUserInterfaceName() {
        return getClass().getSimpleName();
    }

    @Override
    public String getUserInterfaceDescription() {
        return "Giao diện thống kê giá vốn thông qua nghiệp vụ kinh doanh";
    }

    @Override
    public String getModuleName() {
        return Installer.MODULE_NAME;
    }
}

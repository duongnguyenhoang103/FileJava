/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package vn.com.hkt.resto.toolbar.gui;

import java.awt.GridLayout;
import org.openide.util.NbBundle;
import org.openide.windows.TopComponent;
import org.netbeans.api.settings.ConvertAsProperties;
import org.openide.awt.ActionID;
import org.openide.awt.ActionReference;
import vn.com.hkt.resto.panel.Are_Rrocessing_Food;
import vn.com.hkt.resto.panel.FoodCalled;
import vn.com.hkt.resto.panel.Foods_Have_Done;

/**
 * Top component which displays something.
 */
@ConvertAsProperties(dtd = "-//vn.com.hkt.resto.toolbar.gui//MenuKitchenManager//EN",
autostore = false)
@TopComponent.Description(preferredID = "MenuKitchenManagerTopComponent",
//iconBase="SET/PATH/TO/ICON/HERE", 
persistenceType = TopComponent.PERSISTENCE_ALWAYS)
@TopComponent.Registration(mode = "editor", openAtStartup = false)
@ActionID(category = "Window", id = "vn.com.hkt.resto.toolbar.gui.MenuKitchenManagerTopComponent")
@ActionReference(path = "Menu/Restaurant" /*, position = 333 */)
@TopComponent.OpenActionRegistration(displayName = "#CTL_MenuKitchenManagerAction",
preferredID = "MenuKitchenManagerTopComponent")
public final class MenuKitchenManagerTopComponent extends TopComponent {

    public MenuKitchenManagerTopComponent() {
        initComponents();
        setName(NbBundle.getMessage(MenuKitchenManagerTopComponent.class, "CTL_MenuKitchenManagerTopComponent"));
        setToolTipText(NbBundle.getMessage(MenuKitchenManagerTopComponent.class, "HINT_MenuKitchenManagerTopComponent"));

        panel_Tong.setLayout(new GridLayout(1, 3));

        FoodCalled foddCall = new FoodCalled();
        panel_Tong.add(foddCall);

        Are_Rrocessing_Food are_Rrocessing_Food = new Are_Rrocessing_Food();
        panel_Tong.add(are_Rrocessing_Food);

        Foods_Have_Done foods_Have_Done = new Foods_Have_Done();
        panel_Tong.add(foods_Have_Done);

    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panel_Tong = new javax.swing.JPanel();

        panel_Tong.setBackground(new java.awt.Color(103, 153, 255));

        javax.swing.GroupLayout panel_TongLayout = new javax.swing.GroupLayout(panel_Tong);
        panel_Tong.setLayout(panel_TongLayout);
        panel_TongLayout.setHorizontalGroup(
            panel_TongLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 886, Short.MAX_VALUE)
        );
        panel_TongLayout.setVerticalGroup(
            panel_TongLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 535, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panel_Tong, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panel_Tong, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel panel_Tong;
    // End of variables declaration//GEN-END:variables

    @Override
    public void componentOpened() {
        // TODO add custom code on component opening
    }

    @Override
    public void componentClosed() {
        // TODO add custom code on component closing
    }

    void writeProperties(java.util.Properties p) {
        // better to version settings since initial version as advocated at
        // http://wiki.apidesign.org/wiki/PropertyFiles
        p.setProperty("version", "1.0");
        // TODO store your settings
    }

    void readProperties(java.util.Properties p) {
        String version = p.getProperty("version");
        // TODO read your settings according to their version
    }
}

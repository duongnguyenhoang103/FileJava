/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * ExtensionEnterprisePanel.java
 *
 * Created on Dec 21, 2011, 4:35:59 PM
 */
package vn.com.hkt.ui.panel;

import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Dimension;
import java.awt.Font;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JLabel;
import javax.swing.JTable;
import org.openide.util.Lookup;
import vn.com.hkt.basic.api.ISystemSotfwareBN;
import vn.com.hkt.extension.Installer;
import vn.com.hkt.pilot.entities.system.SystemSoftware;
import vn.com.hkt.pilot.identity.presentation.api.IUserInterface;
import vn.com.hkt.pilot.ui.colortable.StripedTableCellRenderer;

/**
 *
 * @author longnt
 */
public class ExtensionEnterprisePanel extends javax.swing.JPanel implements IUserInterface {

    private EnterpriseExtAddressCell enterpriseExtAddressCell = new EnterpriseExtAddressCell(10);
    private ISystemSotfwareBN sotfwareBN = Lookup.getDefault().lookup(ISystemSotfwareBN.class);
    private List<SystemSoftware> listS = new ArrayList<SystemSoftware>();

    public EnterpriseExtAddressCell getEnterpriseExtAddressCell() {
        return enterpriseExtAddressCell;
    }

    /** Creates new form ExtensionEnterprisePanel */
    public ExtensionEnterprisePanel() {
        initComponents();
        listS = sotfwareBN.selectAll();
        Color colorL = new Color(listS.get(0).getColorLight().getRed(), listS.get(0).getColorLight().getGreen(), listS.get(0).getColorLight().getBlue());
        Color colorD = new Color(listS.get(0).getColorDark().getRed(), listS.get(0).getColorDark().getGreen(), listS.get(0).getColorDark().getBlue());
        Color color = new Color(listS.get(0).getColorWord().getRed(), listS.get(0).getColorWord().getGreen(), listS.get(0).getColorWord().getBlue());
        tableExtensionE.getColumnModel().getColumn(0).setPreferredWidth(100);
        tableExtensionE.getColumnModel().getColumn(0).setMaxWidth(100);
        tableExtensionE.getColumnModel().getColumn(2).setPreferredWidth(100);
        tableExtensionE.getColumnModel().getColumn(2).setMaxWidth(100);
        tableExtensionE.setRowSelectionAllowed(true);
        tableExtensionE.setColumnSelectionAllowed(false);
        tableExtensionE.setSelectionBackground(new Color(192, 210, 224));
        StripedTableCellRenderer.installInColumn(tableExtensionE, colorL, null, colorD, null);
        tableDiaChi.setSelectionBackground(new Color(192, 210, 224));
        StripedTableCellRenderer.installInColumn(tableDiaChi, colorL, null, colorD, null);
        tableExtensionE.setTableHeader(null);

        tableDiaChi.setForeground(color);
        tableExtensionE.setForeground(color);

        tableDiaChi.setTableHeader(null);
        tableDiaChi.getColumnModel().getColumn(0).setPreferredWidth(100);
        tableDiaChi.getColumnModel().getColumn(0).setMaxWidth(100);
        tableDiaChi.getColumnModel().getColumn(2).setPreferredWidth(100);
        tableDiaChi.getColumnModel().getColumn(2).setMaxWidth(100);
        tableDiaChi.setRowSelectionAllowed(true);
        tableDiaChi.setColumnSelectionAllowed(false);

        jScrollPane1.setViewportBorder(null);

        panelTong.removeAll();
        panelTong.setBackground(new Color(242, 241, 240));
        panelTong.setLayout(new BorderLayout());
        panelTong.add(tableExtensionE, BorderLayout.NORTH);
        panelTong.add(jScrollPane2, BorderLayout.CENTER);
        this.removeAll();
        this.setLayout(new BorderLayout());
        this.add(jPanel1, BorderLayout.CENTER);
        this.setBackground(new Color(242, 241, 240));
        JLabel label = new JLabel("          Thông tin chi tiết");
        label.setBackground(new Color(242, 241, 240));
        label.setFont((new Font(" ", Font.BOLD, 14)));
        label.setPreferredSize(new Dimension(WIDTH, 30));
        this.add(label, BorderLayout.NORTH);
    }

    public JTable getTableExtensionE() {
        return this.tableExtensionE;
    }

    public JTable getTableDiaChi() {
        return this.tableDiaChi;
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        panelTong = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tableExtensionE = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        tableDiaChi = new javax.swing.JTable();

        panelTong.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        panelTong.setPreferredSize(new java.awt.Dimension(827, 165));

        tableExtensionE.setBackground(new java.awt.Color(242, 241, 240));
        tableExtensionE.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {"Tel", " ", "Fax", " "},
                {"Email", " ", "Web", " "}
            },
            new String [] {
                "", "", "", ""
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, true, false, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                if (columnIndex == 0 || columnIndex == 2) return false ;
                return canEdit [columnIndex];
            }
        });
        tableExtensionE.setIntercellSpacing(new java.awt.Dimension(0, 0));
        tableExtensionE.setRowHeight(26);
        tableExtensionE.setShowHorizontalLines(false);
        tableExtensionE.setShowVerticalLines(false);
        jScrollPane1.setViewportView(tableExtensionE);

        jScrollPane2.setPreferredSize(new java.awt.Dimension(100, 100));

        tableDiaChi.setBackground(new java.awt.Color(242, 241, 240));
        tableDiaChi.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {"Địa chỉ 1", " ", " ", " "},
                {"                2", " ", " ", " "},
                {"                3", " ", " ", " "}
            },
            new String [] {
                "", "", "", ""
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, true, true, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                if (columnIndex == 0 ) return false ;
                return canEdit [columnIndex];
            }
        });
        tableDiaChi.setIntercellSpacing(new java.awt.Dimension(0, 0));
        tableDiaChi.setRowHeight(26);
        tableDiaChi.setShowHorizontalLines(false);
        tableDiaChi.setShowVerticalLines(false);
        jScrollPane2.setViewportView(tableDiaChi);

        javax.swing.GroupLayout panelTongLayout = new javax.swing.GroupLayout(panelTong);
        panelTong.setLayout(panelTongLayout);
        panelTongLayout.setHorizontalGroup(
            panelTongLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 815, Short.MAX_VALUE)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        panelTongLayout.setVerticalGroup(
            panelTongLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelTongLayout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addComponent(panelTong, javax.swing.GroupLayout.DEFAULT_SIZE, 821, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(panelTong, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(386, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JPanel panelTong;
    private javax.swing.JTable tableDiaChi;
    private javax.swing.JTable tableExtensionE;
    // End of variables declaration//GEN-END:variables

    @Override
    public String toString() {
        return "Thông tin chi tiết";
    }

    @Override
    public String getUserInterfaceName() {
        return getClass().getSimpleName();
    }

    @Override
    public String getUserInterfaceDescription() {
        return "Giao diện thông tin chi tiết doanh nghiệp về địa chỉ";
    }

    @Override
    public String getModuleName() {
        return Installer.MODULE_NAME;
    }
}

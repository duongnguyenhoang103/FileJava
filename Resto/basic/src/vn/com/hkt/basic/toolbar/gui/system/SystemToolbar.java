/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * SystemToolbar.java
 *
 * Created on Feb 15, 2012, 10:19:44 AM
 */
package vn.com.hkt.basic.toolbar.gui.system;

import java.awt.Color;
import java.awt.Component;
import java.awt.FileDialog;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.GraphicsEnvironment;
import java.awt.Image;
import java.awt.image.BufferedImage;
import java.io.ByteArrayOutputStream;
import java.io.IOException;
import java.lang.reflect.Field;
import java.util.ArrayList;
import java.util.List;
import java.util.Set;
import javax.imageio.ImageIO;
import javax.swing.*;
import javax.swing.table.DefaultTableModel;
import org.openide.LifecycleManager;
import org.openide.util.Exceptions;
import org.openide.util.Lookup;
import org.openide.util.lookup.ServiceProvider;
import org.openide.windows.TopComponent;
import org.openide.windows.WindowManager;
import vn.com.hkt.basic.toolbar.BasicToolbarManager;
import vn.com.hkt.basic.toolbar.api.system.ISystemToolbar;
import vn.com.hkt.basic.toolbar.api.ITabToolbar;
import vn.com.hkt.pilot.entities.system.SystemSoftware;
import vn.com.hkt.pilot.entities.system.dao.SystemSotfwareDAO;
import vn.com.hkt.pilot.identity.presentation.api.ITopComponent;

/**
 *
 * @author Admin
 */
@ServiceProvider(service = ITabToolbar.class)
public class SystemToolbar extends javax.swing.JPanel implements ISystemToolbar {

    private List<String> listF;
    private DefaultComboBoxModel modelFont, modelSize;
    private SystemSoftware software = new SystemSoftware();
    private SystemSotfwareDAO sotfwareBN = new SystemSotfwareDAO();
    private List<SystemSoftware> listS = new ArrayList<SystemSoftware>();
    private JTable table = new JTable(new DefaultTableModel());
    private boolean backgroundIsImage;

    /**
     * Creates new form SystemToolbar
     */
    public SystemToolbar() {
        initComponents();
        loadComboFont();
        cboFont.setModel(modelFont);
        cboSize.setModel(modelSize);
        loadSubToolbarSystem();
        listS = sotfwareBN.selectAll();
        if (listS.isEmpty()) {
            software.getFont().setFontName(table.getFont().getFontName());
            software.setSizeWord(table.getFont().getSize());
            software.getColorBackground().setBlue(250);
            software.getColorBackground().setGreen(250);
            software.getColorBackground().setRed(250);

            software.getColorMouseClick().setRed(252);
            software.getColorMouseClick().setGreen(230);
            software.getColorMouseClick().setBlue(145);

            software.getColorMouseMove().setRed(252);
            software.getColorMouseMove().setGreen(242);
            software.getColorMouseMove().setBlue(198);

            software.getColorWord().setRed(0);
            software.getColorWord().setGreen(0);
            software.getColorWord().setBlue(0);

            software.getColorTitle().setRed(Color.blue.getRed());
            software.getColorTitle().setGreen(Color.blue.getGreen());
            software.getColorTitle().setBlue(Color.blue.getBlue());

            software.getColorLight().setBlue(231);
            software.getColorLight().setGreen(228);
            software.getColorLight().setRed(220);

            software.getColorDark().setBlue(242);
            software.getColorDark().setGreen(239);
            software.getColorDark().setRed(235);
            sotfwareBN.insert(software);
            loadColorBtn();
        } else {
            software = listS.get(0);
            loadColorBtn();
        }
    }

    private void loadSubToolbarSystem() {
//        this.setLayout(new FlowLayout(FlowLayout.LEFT));
//        List<ISubSystemToolbar> list = (List<ISubSystemToolbar>) Lookup.getDefault().lookupAll(ISubSystemToolbar.class);
//        for (int i = 0; i < list.size(); i++) {
//            if (list.get(i).getTabToolbarIndex() == TAB_INDEX) {
//                ISubSystemToolbar com = list.get(i);
//                JPanel panel = ((JPanel) com);
//                this.add(panel);
//            }
//        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        btnBackgroundColor = new javax.swing.JButton();
        btnMouseMove = new javax.swing.JButton();
        btnMouseClick = new javax.swing.JButton();
        btnColorDark = new javax.swing.JButton();
        btnBackgroundImage = new javax.swing.JButton();
        btnColorLight = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jButton9 = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        btnColorWord = new javax.swing.JButton();
        cboFont = new JComboBox();
        cboSize = new javax.swing.JComboBox();
        btnColorTitle = new javax.swing.JButton();
        btnDefault = new javax.swing.JButton();
        jComboBox6 = new javax.swing.JComboBox();
        panel4 = new javax.swing.JPanel();
        btnRegistryLicense = new javax.swing.JButton();
        btnHKTRegistry = new javax.swing.JButton();
        panel3 = new javax.swing.JPanel();
        btnContact = new javax.swing.JButton();
        btnHelp = new javax.swing.JButton();
        btnExitSystem2 = new javax.swing.JButton();
        btnAuthor = new javax.swing.JButton();
        panel5 = new javax.swing.JPanel();
        btnPlugin = new javax.swing.JButton();
        btnDataDemo = new javax.swing.JButton();
        btnExit = new javax.swing.JButton();
        btnReset = new javax.swing.JButton();

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, org.openide.util.NbBundle.getMessage(SystemToolbar.class, "SystemToolbar.jPanel1.border.title"), javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.BOTTOM)); // NOI18N
        jPanel1.setPreferredSize(new java.awt.Dimension(160, 98));

        btnBackgroundColor.setIcon(new javax.swing.ImageIcon(getClass().getResource("/vn/com/hkt/basic/toolbar/icon/csMin.png"))); // NOI18N
        btnBackgroundColor.setText(org.openide.util.NbBundle.getMessage(SystemToolbar.class, "SystemToolbar.btnBackgroundColor.text")); // NOI18N
        btnBackgroundColor.setAlignmentY(0.0F);
        btnBackgroundColor.setMargin(new java.awt.Insets(0, 0, 0, 0));
        btnBackgroundColor.setPreferredSize(new java.awt.Dimension(76, 30));
        btnBackgroundColor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackgroundColorActionPerformed(evt);
            }
        });

        btnMouseMove.setIcon(new javax.swing.ImageIcon(getClass().getResource("/vn/com/hkt/basic/toolbar/icon/csMin.png"))); // NOI18N
        btnMouseMove.setText(org.openide.util.NbBundle.getMessage(SystemToolbar.class, "SystemToolbar.btnMouseMove.text")); // NOI18N
        btnMouseMove.setAlignmentY(0.0F);
        btnMouseMove.setMargin(new java.awt.Insets(0, 0, 0, 0));
        btnMouseMove.setPreferredSize(new java.awt.Dimension(76, 30));
        btnMouseMove.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMouseMoveActionPerformed(evt);
            }
        });

        btnMouseClick.setIcon(new javax.swing.ImageIcon(getClass().getResource("/vn/com/hkt/basic/toolbar/icon/csMin.png"))); // NOI18N
        btnMouseClick.setText(org.openide.util.NbBundle.getMessage(SystemToolbar.class, "SystemToolbar.btnMouseClick.text")); // NOI18N
        btnMouseClick.setAlignmentY(0.0F);
        btnMouseClick.setMargin(new java.awt.Insets(0, 0, 0, 0));
        btnMouseClick.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMouseClickActionPerformed(evt);
            }
        });

        btnColorDark.setIcon(new javax.swing.ImageIcon(getClass().getResource("/vn/com/hkt/basic/toolbar/icon/csMin.png"))); // NOI18N
        btnColorDark.setText(org.openide.util.NbBundle.getMessage(SystemToolbar.class, "SystemToolbar.btnColorDark.text")); // NOI18N
        btnColorDark.setAlignmentY(0.0F);
        btnColorDark.setMargin(new java.awt.Insets(0, 0, 0, 0));
        btnColorDark.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnColorDarkActionPerformed(evt);
            }
        });

        btnBackgroundImage.setIcon(new javax.swing.ImageIcon(getClass().getResource("/vn/com/hkt/basic/toolbar/icon/anhnen.png"))); // NOI18N
        btnBackgroundImage.setText(org.openide.util.NbBundle.getMessage(SystemToolbar.class, "SystemToolbar.btnBackgroundImage.text")); // NOI18N
        btnBackgroundImage.setAlignmentY(0.0F);
        btnBackgroundImage.setMargin(new java.awt.Insets(0, 0, 0, 0));
        btnBackgroundImage.setPreferredSize(new java.awt.Dimension(76, 30));
        btnBackgroundImage.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackgroundImageActionPerformed(evt);
            }
        });

        btnColorLight.setIcon(new javax.swing.ImageIcon(getClass().getResource("/vn/com/hkt/basic/toolbar/icon/csMin.png"))); // NOI18N
        btnColorLight.setText(org.openide.util.NbBundle.getMessage(SystemToolbar.class, "SystemToolbar.btnColorLight.text")); // NOI18N
        btnColorLight.setAlignmentY(0.0F);
        btnColorLight.setMargin(new java.awt.Insets(0, 0, 0, 0));
        btnColorLight.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnColorLightActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(btnColorLight, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(6, 6, 6)
                .addComponent(btnColorDark))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(btnMouseMove, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(6, 6, 6)
                .addComponent(btnMouseClick))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(btnBackgroundColor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(6, 6, 6)
                .addComponent(btnBackgroundImage, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnColorLight, javax.swing.GroupLayout.DEFAULT_SIZE, 25, Short.MAX_VALUE)
                    .addComponent(btnColorDark, javax.swing.GroupLayout.DEFAULT_SIZE, 25, Short.MAX_VALUE))
                .addGap(6, 6, 6)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnMouseMove, javax.swing.GroupLayout.DEFAULT_SIZE, 25, Short.MAX_VALUE)
                    .addComponent(btnMouseClick, javax.swing.GroupLayout.DEFAULT_SIZE, 25, Short.MAX_VALUE))
                .addGap(6, 6, 6)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnBackgroundColor, javax.swing.GroupLayout.DEFAULT_SIZE, 24, Short.MAX_VALUE)
                    .addComponent(btnBackgroundImage, javax.swing.GroupLayout.DEFAULT_SIZE, 24, Short.MAX_VALUE)))
        );

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(null, org.openide.util.NbBundle.getMessage(SystemToolbar.class, "SystemToolbar.jPanel3.border.title"), javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.BOTTOM)); // NOI18N
        jPanel3.setPreferredSize(new java.awt.Dimension(270, 98));

        jButton9.setText(org.openide.util.NbBundle.getMessage(SystemToolbar.class, "SystemToolbar.jButton9.text")); // NOI18N

        btnColorWord.setIcon(new javax.swing.ImageIcon(getClass().getResource("/vn/com/hkt/basic/toolbar/icon/csMID.png"))); // NOI18N
        btnColorWord.setText(org.openide.util.NbBundle.getMessage(SystemToolbar.class, "SystemToolbar.btnColorWord.text")); // NOI18N
        btnColorWord.setAlignmentY(0.0F);
        btnColorWord.setMargin(new java.awt.Insets(0, 0, 0, 0));
        btnColorWord.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnColorWordActionPerformed(evt);
            }
        });

        cboFont.setAlignmentY(0.0F);
        cboFont.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cboFontItemStateChanged(evt);
            }
        });

        cboSize.setAlignmentY(0.0F);
        cboSize.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cboSizeItemStateChanged(evt);
            }
        });

        btnColorTitle.setIcon(new javax.swing.ImageIcon(getClass().getResource("/vn/com/hkt/basic/toolbar/icon/csMID.png"))); // NOI18N
        btnColorTitle.setText(org.openide.util.NbBundle.getMessage(SystemToolbar.class, "SystemToolbar.btnColorTitle.text")); // NOI18N
        btnColorTitle.setAlignmentY(0.0F);
        btnColorTitle.setMargin(new java.awt.Insets(0, 0, 0, 0));
        btnColorTitle.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnColorTitleActionPerformed(evt);
            }
        });

        btnDefault.setIcon(new javax.swing.ImageIcon(getClass().getResource("/vn/com/hkt/basic/toolbar/icon/macdinh.png"))); // NOI18N
        btnDefault.setText(org.openide.util.NbBundle.getMessage(SystemToolbar.class, "SystemToolbar.btnDefault.text")); // NOI18N
        btnDefault.setAlignmentY(0.0F);
        btnDefault.setMargin(new java.awt.Insets(0, 0, 0, 0));
        btnDefault.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDefaultActionPerformed(evt);
            }
        });

        jComboBox6.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jComboBox6.setAlignmentY(0.0F);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(cboFont, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(6, 6, 6)
                .addComponent(cboSize, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(6, 6, 6)
                .addComponent(jComboBox6, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(btnColorWord)
                .addGap(6, 6, 6)
                .addComponent(btnColorTitle)
                .addGap(6, 6, 6)
                .addComponent(btnDefault, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(cboFont, javax.swing.GroupLayout.DEFAULT_SIZE, 36, Short.MAX_VALUE)
                    .addComponent(cboSize, javax.swing.GroupLayout.DEFAULT_SIZE, 36, Short.MAX_VALUE)
                    .addComponent(jComboBox6, javax.swing.GroupLayout.DEFAULT_SIZE, 36, Short.MAX_VALUE))
                .addGap(10, 10, 10)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnColorWord, javax.swing.GroupLayout.DEFAULT_SIZE, 40, Short.MAX_VALUE)
                    .addComponent(btnColorTitle, javax.swing.GroupLayout.DEFAULT_SIZE, 40, Short.MAX_VALUE)
                    .addComponent(btnDefault, javax.swing.GroupLayout.DEFAULT_SIZE, 40, Short.MAX_VALUE)))
        );

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(175, 175, 175)
                .addComponent(jButton9, javax.swing.GroupLayout.PREFERRED_SIZE, 0, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addComponent(jButton9, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        panel4.setBorder(javax.swing.BorderFactory.createTitledBorder(null, org.openide.util.NbBundle.getMessage(SystemToolbar.class, "SystemToolbar.panel4.border.title"), javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.BOTTOM)); // NOI18N
        panel4.setPreferredSize(new java.awt.Dimension(143, 70));

        btnRegistryLicense.setIcon(new javax.swing.ImageIcon(getClass().getResource("/vn/com/hkt/basic/toolbar/icon/dangkibanquyen.png"))); // NOI18N
        btnRegistryLicense.setText(org.openide.util.NbBundle.getMessage(SystemToolbar.class, "SystemToolbar.btnRegistryLicense.text_1")); // NOI18N
        btnRegistryLicense.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnRegistryLicense.setMargin(new java.awt.Insets(0, 0, 0, 0));
        btnRegistryLicense.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnRegistryLicense.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRegistryLicenseActionPerformed(evt);
            }
        });

        btnHKTRegistry.setIcon(new javax.swing.ImageIcon(getClass().getResource("/vn/com/hkt/basic/toolbar/icon/hkt.png"))); // NOI18N
        btnHKTRegistry.setText(org.openide.util.NbBundle.getMessage(SystemToolbar.class, "SystemToolbar.btnHKTRegistry.text")); // NOI18N
        btnHKTRegistry.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnHKTRegistry.setMargin(new java.awt.Insets(0, 0, 0, 0));
        btnHKTRegistry.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnHKTRegistry.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHKTRegistryActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panel4Layout = new javax.swing.GroupLayout(panel4);
        panel4.setLayout(panel4Layout);
        panel4Layout.setHorizontalGroup(
            panel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel4Layout.createSequentialGroup()
                .addComponent(btnRegistryLicense, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnHKTRegistry, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        panel4Layout.setVerticalGroup(
            panel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(btnHKTRegistry, javax.swing.GroupLayout.DEFAULT_SIZE, 86, Short.MAX_VALUE)
            .addComponent(btnRegistryLicense, javax.swing.GroupLayout.DEFAULT_SIZE, 86, Short.MAX_VALUE)
        );

        panel3.setBorder(javax.swing.BorderFactory.createTitledBorder(null, org.openide.util.NbBundle.getMessage(SystemToolbar.class, "SystemToolbar.panel3.border.title"), javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.BOTTOM)); // NOI18N

        btnContact.setIcon(new javax.swing.ImageIcon(getClass().getResource("/vn/com/hkt/basic/toolbar/icon/lienhe.png"))); // NOI18N
        btnContact.setText(org.openide.util.NbBundle.getMessage(SystemToolbar.class, "SystemToolbar.btnContact.text")); // NOI18N
        btnContact.setAlignmentY(0.0F);
        btnContact.setMargin(new java.awt.Insets(0, 0, 0, 0));
        btnContact.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnContactActionPerformed(evt);
            }
        });

        btnHelp.setIcon(new javax.swing.ImageIcon(getClass().getResource("/vn/com/hkt/basic/toolbar/icon/trogiup.png"))); // NOI18N
        btnHelp.setText(org.openide.util.NbBundle.getMessage(SystemToolbar.class, "SystemToolbar.btnHelp.text")); // NOI18N
        btnHelp.setAlignmentY(0.0F);
        btnHelp.setMargin(new java.awt.Insets(0, 0, 0, 0));
        btnHelp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHelpActionPerformed(evt);
            }
        });

        btnExitSystem2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/vn/com/hkt/basic/toolbar/icon/gioithieu_1.png"))); // NOI18N
        btnExitSystem2.setText(org.openide.util.NbBundle.getMessage(SystemToolbar.class, "SystemToolbar.btnExitSystem2.text")); // NOI18N
        btnExitSystem2.setAlignmentY(0.0F);
        btnExitSystem2.setMargin(new java.awt.Insets(0, 0, 0, 0));
        btnExitSystem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExitSystem2ActionPerformed(evt);
            }
        });

        btnAuthor.setIcon(new javax.swing.ImageIcon(getClass().getResource("/vn/com/hkt/basic/toolbar/icon/tacgia.png"))); // NOI18N
        btnAuthor.setText(org.openide.util.NbBundle.getMessage(SystemToolbar.class, "SystemToolbar.btnAuthor.text")); // NOI18N
        btnAuthor.setAlignmentY(0.0F);
        btnAuthor.setMargin(new java.awt.Insets(0, 0, 0, 0));
        btnAuthor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAuthorActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panel3Layout = new javax.swing.GroupLayout(panel3);
        panel3.setLayout(panel3Layout);
        panel3Layout.setHorizontalGroup(
            panel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel3Layout.createSequentialGroup()
                .addComponent(btnHelp, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(6, 6, 6)
                .addComponent(btnContact, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(panel3Layout.createSequentialGroup()
                .addComponent(btnExitSystem2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(6, 6, 6)
                .addComponent(btnAuthor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        panel3Layout.setVerticalGroup(
            panel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel3Layout.createSequentialGroup()
                .addGroup(panel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnHelp, javax.swing.GroupLayout.DEFAULT_SIZE, 37, Short.MAX_VALUE)
                    .addComponent(btnContact, javax.swing.GroupLayout.DEFAULT_SIZE, 37, Short.MAX_VALUE))
                .addGap(9, 9, 9)
                .addGroup(panel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnExitSystem2, javax.swing.GroupLayout.DEFAULT_SIZE, 40, Short.MAX_VALUE)
                    .addComponent(btnAuthor, javax.swing.GroupLayout.DEFAULT_SIZE, 40, Short.MAX_VALUE)))
        );

        panel5.setBorder(javax.swing.BorderFactory.createTitledBorder(null, org.openide.util.NbBundle.getMessage(SystemToolbar.class, "SystemToolbar.panel5.border.title"), javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.BOTTOM)); // NOI18N

        btnPlugin.setIcon(new javax.swing.ImageIcon(getClass().getResource("/vn/com/hkt/basic/toolbar/icon/plugin.png"))); // NOI18N
        btnPlugin.setText(org.openide.util.NbBundle.getMessage(SystemToolbar.class, "SystemToolbar.btnPlugin.text")); // NOI18N
        btnPlugin.setAlignmentY(0.0F);
        btnPlugin.setMargin(new java.awt.Insets(0, 0, 0, 0));
        btnPlugin.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnPlugin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPluginActionPerformed(evt);
            }
        });

        btnDataDemo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/vn/com/hkt/basic/toolbar/icon/dulieumau.png"))); // NOI18N
        btnDataDemo.setText(org.openide.util.NbBundle.getMessage(SystemToolbar.class, "SystemToolbar.btnDataDemo.text")); // NOI18N
        btnDataDemo.setAlignmentY(0.0F);
        btnDataDemo.setMargin(new java.awt.Insets(0, 0, 0, 0));
        btnDataDemo.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnDataDemo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDataDemoActionPerformed(evt);
            }
        });

        btnExit.setIcon(new javax.swing.ImageIcon(getClass().getResource("/vn/com/hkt/basic/toolbar/icon/thoat.png"))); // NOI18N
        btnExit.setText(org.openide.util.NbBundle.getMessage(SystemToolbar.class, "SystemToolbar.btnExit.text")); // NOI18N
        btnExit.setAlignmentY(0.0F);
        btnExit.setMargin(new java.awt.Insets(0, 0, 0, 0));
        btnExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExitActionPerformed(evt);
            }
        });

        btnReset.setIcon(new javax.swing.ImageIcon(getClass().getResource("/vn/com/hkt/basic/toolbar/icon/khoidonglai.png"))); // NOI18N
        btnReset.setText(org.openide.util.NbBundle.getMessage(SystemToolbar.class, "SystemToolbar.btnReset.text")); // NOI18N
        btnReset.setAlignmentY(0.0F);
        btnReset.setMargin(new java.awt.Insets(0, 0, 0, 0));
        btnReset.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnReset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnResetActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panel5Layout = new javax.swing.GroupLayout(panel5);
        panel5.setLayout(panel5Layout);
        panel5Layout.setHorizontalGroup(
            panel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel5Layout.createSequentialGroup()
                .addComponent(btnPlugin)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnDataDemo, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(panel5Layout.createSequentialGroup()
                .addComponent(btnExit)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnReset))
        );
        panel5Layout.setVerticalGroup(
            panel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel5Layout.createSequentialGroup()
                .addGroup(panel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnPlugin, javax.swing.GroupLayout.DEFAULT_SIZE, 39, Short.MAX_VALUE)
                    .addComponent(btnDataDemo, javax.swing.GroupLayout.DEFAULT_SIZE, 39, Short.MAX_VALUE))
                .addGap(8, 8, 8)
                .addGroup(panel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnReset, javax.swing.GroupLayout.DEFAULT_SIZE, 39, Short.MAX_VALUE)
                    .addComponent(btnExit, javax.swing.GroupLayout.DEFAULT_SIZE, 39, Short.MAX_VALUE)))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, 308, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(panel4, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(panel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(panel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 108, Short.MAX_VALUE)
            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, 108, Short.MAX_VALUE)
            .addComponent(panel4, javax.swing.GroupLayout.DEFAULT_SIZE, 108, Short.MAX_VALUE)
            .addComponent(panel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(panel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnColorLightActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnColorLightActionPerformed
        Color color = JColorChooser.showDialog(new JDialog(), " ", Color.WHITE);
        if (color == null) {
            return;
        }
        Icon icon = btnColorLight.getIcon();
        btnColorLight.setIcon(new IconColor(icon.getIconWidth(), btnColorLight.getPreferredSize().height, color));
        software.getColorDark().setBlue(color.getBlue());
        software.getColorDark().setGreen(color.getGreen());
        software.getColorDark().setRed(color.getRed());
        sotfwareBN.update(software);
        List<ITopComponent> list = (List<ITopComponent>) Lookup.getDefault().lookupAll(ITopComponent.class);
        for (ITopComponent topComponent : list) {
            topComponent.reLoadColorTable();
        }
    }//GEN-LAST:event_btnColorLightActionPerformed

    private void btnExitSystem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExitSystem2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnExitSystem2ActionPerformed

    private void btnExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExitActionPerformed
        LifecycleManager.getDefault().exit();
    }//GEN-LAST:event_btnExitActionPerformed

    private void cboSizeItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cboSizeItemStateChanged
        software.setSizeWord((Integer) cboSize.getSelectedItem());
        sotfwareBN.update(software);
        List<ITopComponent> list = (List<ITopComponent>) Lookup.getDefault().lookupAll(ITopComponent.class);
        for (ITopComponent topComponent : list) {
            topComponent.reLoadSize();
        }
//        changeSizeTable();
    }//GEN-LAST:event_cboSizeItemStateChanged

    private void btnDefaultActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDefaultActionPerformed

        software.getFont().setFontName(table.getFont().getFontName());
        software.setSizeWord(table.getFont().getSize());
        software.getColorBackground().setBlue(250);
        software.getColorBackground().setGreen(250);
        software.getColorBackground().setRed(250);

        software.getColorMouseClick().setRed(252);
        software.getColorMouseClick().setGreen(230);
        software.getColorMouseClick().setBlue(145);

        software.getColorMouseMove().setRed(252);
        software.getColorMouseMove().setGreen(242);
        software.getColorMouseMove().setBlue(198);

        software.getColorWord().setRed(0);
        software.getColorWord().setGreen(0);
        software.getColorWord().setBlue(0);

        software.getColorTitle().setRed(Color.blue.getRed());
        software.getColorTitle().setGreen(Color.blue.getGreen());
        software.getColorTitle().setBlue(Color.blue.getBlue());

        software.getColorLight().setBlue(231);
        software.getColorLight().setGreen(228);
        software.getColorLight().setRed(220);

        software.getColorDark().setBlue(242);
        software.getColorDark().setGreen(239);
        software.getColorDark().setRed(235);

        sotfwareBN.update(software);

        loadColorBtn();
        List<ITopComponent> list = (List<ITopComponent>) Lookup.getDefault().lookupAll(ITopComponent.class);
        for (ITopComponent topComponent : list) {
            topComponent.reLoadFont();
            topComponent.reLoadSize();
            topComponent.reLoadColorTable();
            topComponent.reLoadColorMouse();
            topComponent.reLoadColorTitle();
            topComponent.reLoadColorWord();
        }
        BasicToolbarManager.getBasicToolbar().changeColor();
    }//GEN-LAST:event_btnDefaultActionPerformed

    private void btnColorDarkActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnColorDarkActionPerformed
        Color color = JColorChooser.showDialog(new JDialog(), " ", Color.WHITE);
        if (color == null) {
            return;
        }
        Icon icon = btnColorDark.getIcon();
        btnColorDark.setIcon(new IconColor(icon.getIconWidth(), (int) btnColorDark.getPreferredSize().getHeight(), color));
        software.getColorLight().setBlue(color.getBlue());
        software.getColorLight().setGreen(color.getGreen());
        software.getColorLight().setRed(color.getRed());
        sotfwareBN.update(software);
        List<ITopComponent> list = (List<ITopComponent>) Lookup.getDefault().lookupAll(ITopComponent.class);
        for (ITopComponent topComponent : list) {
            topComponent.reLoadColorTable();
        }
    }//GEN-LAST:event_btnColorDarkActionPerformed

    private void btnColorWordActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnColorWordActionPerformed
        Color color = JColorChooser.showDialog(new JDialog(), " ", Color.WHITE);
        if (color == null) {
            return;
        }
        Icon icon = btnColorWord.getIcon();
        btnColorWord.setIcon(new IconColor(icon.getIconWidth(), (int) btnColorWord.getPreferredSize().getHeight(), color));
        software.getColorWord().setBlue(color.getBlue());
        software.getColorWord().setGreen(color.getGreen());
        software.getColorWord().setRed(color.getRed());
        sotfwareBN.update(software);
        List<ITopComponent> list = (List<ITopComponent>) Lookup.getDefault().lookupAll(ITopComponent.class);
        for (ITopComponent topComponent : list) {
            topComponent.reLoadColorWord();
        }
        BasicToolbarManager.getBasicToolbar().changeColor();
    }//GEN-LAST:event_btnColorWordActionPerformed

    private void btnColorTitleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnColorTitleActionPerformed
        Color color = JColorChooser.showDialog(new JDialog(), " ", Color.WHITE);
        if (color == null) {
            return;
        }
        Icon icon = btnColorTitle.getIcon();
        btnColorTitle.setIcon(new IconColor(icon.getIconWidth(), (int) btnColorTitle.getPreferredSize().getHeight(), color));
        software.getColorTitle().setBlue(color.getBlue());
        software.getColorTitle().setGreen(color.getGreen());
        software.getColorTitle().setRed(color.getRed());
        sotfwareBN.update(software);
        List<ITopComponent> list = (List<ITopComponent>) Lookup.getDefault().lookupAll(ITopComponent.class);
        for (ITopComponent topComponent : list) {
            topComponent.reLoadColorTitle();
        }
    }//GEN-LAST:event_btnColorTitleActionPerformed

    private void btnMouseClickActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMouseClickActionPerformed
        Color color = JColorChooser.showDialog(new JDialog(), " ", Color.WHITE);
        if (color == null) {
            return;
        }
        Icon icon = btnMouseClick.getIcon();
        btnMouseClick.setIcon(new IconColor(icon.getIconWidth(), btnMouseClick.getPreferredSize().height, color));
        software.getColorMouseClick().setBlue(color.getBlue());
        software.getColorMouseClick().setGreen(color.getGreen());
        software.getColorMouseClick().setRed(color.getRed());
        sotfwareBN.update(software);
        List<ITopComponent> list = (List<ITopComponent>) Lookup.getDefault().lookupAll(ITopComponent.class);
        for (ITopComponent topComponent : list) {
            topComponent.reLoadColorMouse();
        }
        BasicToolbarManager.getBasicToolbar().changeColor();
    }//GEN-LAST:event_btnMouseClickActionPerformed

    private void btnRegistryLicenseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRegistryLicenseActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnRegistryLicenseActionPerformed

    private void btnHelpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHelpActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnHelpActionPerformed

    private void btnBackgroundColorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackgroundColorActionPerformed
        Color color = JColorChooser.showDialog(new JDialog(), " ", Color.WHITE);
        if (color == null) {
            return;
        }
        Icon icon = btnBackgroundColor.getIcon();
        btnBackgroundColor.setIcon(new IconColor(icon.getIconWidth(), btnBackgroundColor.getPreferredSize().height, color));
        software.getColorBackground().setBlue(color.getBlue());
        software.getColorBackground().setGreen(color.getGreen());
        software.getColorBackground().setRed(color.getRed());
        sotfwareBN.update(software);
        List<ITopComponent> list = (List<ITopComponent>) Lookup.getDefault().lookupAll(ITopComponent.class);
        for (ITopComponent topComponent : list) {
            topComponent.reLoadColorMouse();
        }
//        BasicToolbarManager.getBasicToolbar().changeColor();

    }//GEN-LAST:event_btnBackgroundColorActionPerformed

    private void btnBackgroundImageActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackgroundImageActionPerformed
        // TODO add your handling code here:
        backgroundIsImage = true;
        FileDialog fd = new FileDialog(new JDialog(), "Chọn ảnh");
        fd.setVisible(true);
        String d = fd.getDirectory();
        String f = fd.getFile();
        if (d == null || f == null) {
            return;
        }
        String fileName = d + f;
        ImageIcon image;
        try {
            image = new ImageIcon(fileName);
        } catch (Exception e) {
            image = null;
        }
        software.setImageBackground(convertImage2Byte(image.getImage()));
    }//GEN-LAST:event_btnBackgroundImageActionPerformed

    private void btnMouseMoveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMouseMoveActionPerformed
        Color color = JColorChooser.showDialog(new JDialog(), "Chọn màu click chuột", Color.WHITE);
        if (color == null) {
            return;
        }
        Icon icon = btnMouseMove.getIcon();
        btnMouseMove.setIcon(new IconColor(icon.getIconWidth(), btnMouseMove.getPreferredSize().height, color));
        software.getColorMouseMove().setBlue(color.getBlue());
        software.getColorMouseMove().setGreen(color.getGreen());
        software.getColorMouseMove().setRed(color.getRed());
        sotfwareBN.update(software);
        List<ITopComponent> list = (List<ITopComponent>) Lookup.getDefault().lookupAll(ITopComponent.class);
        for (ITopComponent topComponent : list) {
            topComponent.reLoadColorMouse();
        }
        BasicToolbarManager.getBasicToolbar().changeColor();
    }//GEN-LAST:event_btnMouseMoveActionPerformed

    private void cboFontItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cboFontItemStateChanged
        software.getFont().setFontName(cboFont.getSelectedItem().toString());
        sotfwareBN.update(software);
        List<ITopComponent> list = (List<ITopComponent>) Lookup.getDefault().lookupAll(ITopComponent.class);
        for (ITopComponent topComponent : list) {
            topComponent.reLoadFont();
        }
    }//GEN-LAST:event_cboFontItemStateChanged

    private void btnHKTRegistryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHKTRegistryActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnHKTRegistryActionPerformed

    private void btnContactActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnContactActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnContactActionPerformed

    private void btnAuthorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAuthorActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnAuthorActionPerformed

    private void btnPluginActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPluginActionPerformed
    }//GEN-LAST:event_btnPluginActionPerformed

    private void btnDataDemoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDataDemoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnDataDemoActionPerformed

    private void btnResetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnResetActionPerformed

        LifecycleManager.getDefault().markForRestart();
        LifecycleManager.getDefault().exit();
    }//GEN-LAST:event_btnResetActionPerformed
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAuthor;
    private javax.swing.JButton btnBackgroundColor;
    private javax.swing.JButton btnBackgroundImage;
    private javax.swing.JButton btnColorDark;
    private javax.swing.JButton btnColorLight;
    private javax.swing.JButton btnColorTitle;
    private javax.swing.JButton btnColorWord;
    private javax.swing.JButton btnContact;
    private javax.swing.JButton btnDataDemo;
    private javax.swing.JButton btnDefault;
    private javax.swing.JButton btnExit;
    private javax.swing.JButton btnExitSystem2;
    private javax.swing.JButton btnHKTRegistry;
    private javax.swing.JButton btnHelp;
    private javax.swing.JButton btnMouseClick;
    private javax.swing.JButton btnMouseMove;
    private javax.swing.JButton btnPlugin;
    private javax.swing.JButton btnRegistryLicense;
    private javax.swing.JButton btnReset;
    private javax.swing.JComboBox cboFont;
    private javax.swing.JComboBox cboSize;
    private javax.swing.JButton jButton9;
    private javax.swing.JComboBox jComboBox6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel panel3;
    private javax.swing.JPanel panel4;
    private javax.swing.JPanel panel5;
    // End of variables declaration//GEN-END:variables

    private byte[] convertImage2Byte(Image image) {
        if (image == null) {
            return null;
        }
        ByteArrayOutputStream baos = new ByteArrayOutputStream();
        try {
            int width = image.getWidth(null);
            int height = image.getHeight(null);
            BufferedImage bi = new BufferedImage(width, height, BufferedImage.TYPE_INT_RGB);
            Graphics2D g2d = bi.createGraphics();
            g2d.drawImage(image, 0, 0, null);
            ImageIO.write(bi, "JPEG", baos);
        } catch (IOException ex) {
            //handle it here.... not implemented yet...
        }
        return baos.toByteArray();
    }

    @Override
    public String getTabToolbarName() {
        return TAB_NAME;
    }

    @Override
    public int getTabToolbarIndex() {
        return TAB_INDEX;
    }

    @Override
    public Color getColorLight() {
        return new Color(software.getColorLight().getRed(), software.getColorLight().getGreen(), software.getColorLight().getBlue());
    }

    @Override
    public int getSizeF() {
        return software.getSizeWord();
    }

    @Override
    public String getFontF() {
        return software.getFont().getFontName();
    }

    private void loadComboFont() {
        listF = new ArrayList<String>();
        String fonts[] =
                GraphicsEnvironment.getLocalGraphicsEnvironment().getAvailableFontFamilyNames();

        for (int i = 0; i < fonts.length; i++) {
            listF.add(fonts[i].toString());
        }
        modelFont = new DefaultComboBoxModel(listF.toArray());
        List<Integer> l = new ArrayList<Integer>();
        for (int i = 10; i <= 20; i++) {
            l.add(i);
        }
        modelSize = new DefaultComboBoxModel(l.toArray());
    }

    @Override
    public Color getColorMouseMove() {
        return new Color(software.getColorMouseMove().getRed(), software.getColorMouseMove().getGreen(), software.getColorMouseMove().getBlue());
    }

    @Override
    public Color getColorBackground() {
        return new Color(software.getColorBackground().getRed(), software.getColorBackground().getGreen(), software.getColorBackground().getBlue());
    }

    @Override
    public Color getColorDark() {
        return new Color(software.getColorDark().getRed(), software.getColorDark().getGreen(), software.getColorDark().getBlue());
    }

    @Override
    public Color getColorMouseClick() {
        return new Color(software.getColorMouseClick().getRed(), software.getColorMouseClick().getGreen(), software.getColorMouseClick().getBlue());
    }

    @Override
    public Color getColorWord() {
        return new Color(software.getColorWord().getRed(), software.getColorWord().getGreen(), software.getColorWord().getBlue());
    }

    @Override
    public Color getColorTitle() {
        return new Color(software.getColorTitle().getRed(), software.getColorTitle().getGreen(), software.getColorTitle().getBlue());
    }

    @Override
    public ImageIcon getImageBackground() {
        return new ImageIcon(software.getImageBackground());
    }

    @Override
    public boolean backgroundIsImage() {
        return backgroundIsImage;
    }

    private void loadColorBtn() {
        Icon icon = btnMouseMove.getIcon();
        btnMouseMove.setIcon(new IconColor(icon.getIconWidth(),
                btnMouseMove.getPreferredSize().height, getColorMouseMove()));
        icon = btnMouseClick.getIcon();
        btnMouseClick.setIcon(new IconColor(icon.getIconWidth(),
                btnMouseClick.getPreferredSize().height, getColorMouseClick()));
        icon = btnBackgroundColor.getIcon();
        btnBackgroundColor.setIcon(new IconColor(icon.getIconWidth(),
                btnBackgroundColor.getPreferredSize().height, getColorBackground()));
        icon = btnColorDark.getIcon();
        btnColorDark.setIcon(new IconColor(icon.getIconWidth(),
                btnColorDark.getPreferredSize().height, getColorDark()));
        icon = btnColorLight.getIcon();
        btnColorLight.setIcon(new IconColor(icon.getIconWidth(),
                btnColorLight.getPreferredSize().height, getColorLight()));
        icon = btnColorTitle.getIcon();
        btnColorTitle.setIcon(new IconColor(icon.getIconWidth(),
                btnColorTitle.getPreferredSize().height, getColorTitle()));
        icon = btnColorWord.getIcon();
        btnColorWord.setIcon(new IconColor(icon.getIconWidth(),
                btnColorWord.getPreferredSize().height, getColorWord()));
    }

//    private void changeSizeTable(JScrollPane pane) {
//        Field[]fields= pane.getClass().getDeclaredFields();
//            for (int i = 0; i < fields.length; i++) {
//                try {
//                    fields[i].setAccessible(true);
//                    Object obj= fields[i].get(pane);
//                    if (obj instanceof JTable) {
//                        changeSizeTable((JTable)obj);
//                    }
//                    if (obj instanceof JPanel) {
//                        JPanel pan = (JPanel) (obj);
//                        changeSizeTable(pan);
//                    }
//                    if (obj instanceof JScrollPane) {                    
//                        changeSizeTable((JScrollPane)obj);
//                    }
//                } catch (IllegalArgumentException ex) {
//                    Exceptions.printStackTrace(ex);
//                } catch (IllegalAccessException ex) {
//                    Exceptions.printStackTrace(ex);
//                }
//            }
//    }
//
//    private void changeSizeTable(JPanel panel) {
//        Field[]fields= panel.getClass().getDeclaredFields();
//            for (int i = 0; i < fields.length; i++) {
//                try {
//                    fields[i].setAccessible(true);
//                    Object obj= fields[i].get(panel);
//                    if (obj instanceof JTable) {
//                        changeSizeTable((JTable)obj);
//                    }
//                    if (obj instanceof JPanel) {
//                        JPanel pan = (JPanel) (obj);
//                        changeSizeTable(pan);
//                    }
//                    if (obj instanceof JScrollPane) {                    
//                        changeSizeTable((JScrollPane)obj);
//                    }
//                } catch (IllegalArgumentException ex) {
//                    Exceptions.printStackTrace(ex);
//                } catch (IllegalAccessException ex) {
//                    Exceptions.printStackTrace(ex);
//                }
//            }
//    }
//
//    private void changeSizeTable(JTable tbl) {        
////        JOptionPane.showMessageDialog(null, tbl.getClass().toString());
//        for(int i=0;i<tbl.getRowCount();i++) tbl.setRowHeight(i, getSizeF()+10 );
//    }
//
//    private void changeSizeTable() {
//        Set<TopComponent> listTop = WindowManager.getDefault().getRegistry().getOpened();        
//        for (TopComponent top : listTop) {
//            Field[]fields= top.getClass().getDeclaredFields();
//            for (int i = 0; i < fields.length; i++) {
//                try {
//                    fields[i].setAccessible(true);
//                    Object obj= fields[i].get(top);
//                    if (obj instanceof JTable) {
//                        changeSizeTable((JTable)obj);
//                    }
//                    if (obj instanceof JPanel) {
//                        JPanel panel = (JPanel) (obj);
//                        changeSizeTable(panel);
//                    }
//                    if (obj instanceof JScrollPane) {                    
//                        changeSizeTable((JScrollPane)obj);
//                    }
//                } catch (IllegalArgumentException ex) {
//                    Exceptions.printStackTrace(ex);
//                } catch (IllegalAccessException ex) {
//                    Exceptions.printStackTrace(ex);
//                }
//            }
//        }
//    }
}

class IconColor implements Icon {

    private int width, height;
    private Color color;

    public IconColor(int width, int height, Color color) {
        this.width = width;
        this.height = height;
        this.color = color;
    }

    @Override
    public void paintIcon(Component c, Graphics g, int x, int y) {
        g.setColor(color);
        g.fillRect(x, y, width, height);
    }

    @Override
    public int getIconWidth() {
        return width;
    }

    @Override
    public int getIconHeight() {
        return height;
    }
}

/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * ExtensionEnterprisePanel.java
 *
 * Created on Dec 21, 2011, 4:35:59 PM
 */
package vn.com.hkt.pilot.sb41.product.extW48.ui.panel;

import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Dimension;
import java.awt.Font;
import java.awt.GridLayout;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JLabel;
import javax.swing.JTable;
import org.openide.util.Lookup;
import vn.com.hkt.basic.api.ISystemSotfwareBN;
import vn.com.hkt.pilot.entities.system.SystemSoftware;
import vn.com.hkt.pilot.identity.presentation.api.IUserInterface;
import vn.com.hkt.pilot.sb41.Installer;
import vn.com.hkt.pilot.ui.colortable.StripedTableCellRenderer;

/**
 *
 * @author longnt
 */
public class SB41_W48_Panel extends javax.swing.JPanel implements IUserInterface{

    private ExtProductW48Cell cell;
     private ISystemSotfwareBN sotfwareBN = Lookup.getDefault().lookup(ISystemSotfwareBN.class);
    private List<SystemSoftware> listS = new ArrayList<SystemSoftware>();

    public ExtProductW48Cell getCell() {
        return cell;
    }

    /**
     * Creates new form ExtensionEnterprisePanel
     */
    public SB41_W48_Panel() {
        initComponents();
         listS = sotfwareBN.selectAll();
        Color colorL = new Color(listS.get(0).getColorLight().getRed(), listS.get(0).getColorLight().getGreen(), listS.get(0).getColorLight().getBlue());
        Color colorD = new Color(listS.get(0).getColorDark().getRed(), listS.get(0).getColorDark().getGreen(), listS.get(0).getColorDark().getBlue());
        Color color = new Color(listS.get(0).getColorWord().getRed(), listS.get(0).getColorWord().getGreen(), listS.get(0).getColorWord().getBlue());
        cell = new ExtProductW48Cell();
        tableExtensionProduct.getColumnModel().getColumn(1).setCellEditor(cell);
        tableExtensionProduct.getColumnModel().getColumn(3).setCellEditor(cell);
        tableExtensionProduct.getColumnModel().getColumn(0).setPreferredWidth(100);
        tableExtensionProduct.getColumnModel().getColumn(0).setMaxWidth(100);
        tableExtensionProduct.getColumnModel().getColumn(2).setPreferredWidth(100);
        tableExtensionProduct.getColumnModel().getColumn(2).setMaxWidth(100);
        tableExtensionProduct.setRowSelectionAllowed(true);
        tableExtensionProduct.setColumnSelectionAllowed(false);
        tableExtensionProduct.setForeground(color);
        tableExtensionProduct.setSelectionBackground(new Color(192, 210, 224));
        StripedTableCellRenderer.installInColumn(tableExtensionProduct, colorL, null, colorD, null);
        tableExtensionProduct.setTableHeader(null);

        jScrollPane1.setViewportBorder(null);

        panelTong.removeAll();
        panelTong.setBackground(new Color(242, 241, 240));
        panelTong.setLayout(new GridLayout());
        panelTong.add(tableExtensionProduct);
        this.removeAll();
        this.setLayout(new BorderLayout());
        this.add(jPanel1, BorderLayout.CENTER);
        this.setBackground(new Color(242, 241, 240));
        JLabel label = new JLabel("        Thông tin chi tiết");
        label.setBackground(new Color(242, 241, 240));
        label.setFont((new Font(" ", Font.BOLD, 12)));
        label.setPreferredSize(new Dimension(WIDTH, 30));
        this.add(label, BorderLayout.NORTH);
    }

    public JTable getTableProduct() {
        return this.tableExtensionProduct;
    }

    @Override
    public String toString() {
        return "Thông tin chi tiết";
    }

    public void reset() {
        cell.reset();
        tableExtensionProduct.setValueAt("", 0, 1);
        tableExtensionProduct.setValueAt("", 1, 1);
        tableExtensionProduct.setValueAt("", 1, 3);
        tableExtensionProduct.setValueAt("", 2, 1);
        tableExtensionProduct.setValueAt("", 2, 3);
        tableExtensionProduct.setValueAt("", 3, 1);
        tableExtensionProduct.setValueAt("", 3, 3);
        tableExtensionProduct.setValueAt("", 4, 1);
        tableExtensionProduct.setValueAt("", 5, 1);
        tableExtensionProduct.setValueAt("", 5, 3);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        panelTong = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tableExtensionProduct = new javax.swing.JTable();

        panelTong.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        panelTong.setPreferredSize(new java.awt.Dimension(827, 161));

        tableExtensionProduct.setBackground(new java.awt.Color(242, 241, 240));
        tableExtensionProduct.setModel(new javax.swing.table.DefaultTableModel(
            new Object[][]{
                {"Tên tiếng anh", " ", " ", " "},
                {"Nước sản xuất", " ", "Thành phố", " "},
                {"Ngày sản xuất", " ", "Ngày chỉnh sửa", " "},
                {"Hạn sử dụng", " ", "Tình trạng", " "},
                {"Mô tả ghi chú", " ", " ", " "},
                {"Bảng giá", " ", "Khuyến mãi", " "}
            },
            new String[]{
                "", "", "", ""
            }) {

                boolean[] canEdit = new boolean[]{
                    false, true, false, true
                };

                public boolean isCellEditable(int rowIndex, int columnIndex) {
                    if (rowIndex == 0)
                    if (columnIndex == 2 || columnIndex == 3) return false;
                    if (rowIndex ==4)
                    if (columnIndex ==2 || columnIndex ==3) return false ;
                    return canEdit[columnIndex];
                }
            });
            tableExtensionProduct.setIntercellSpacing(new java.awt.Dimension(0, 0));
            tableExtensionProduct.setRowHeight(26);
            tableExtensionProduct.setShowHorizontalLines(false);
            tableExtensionProduct.setShowVerticalLines(false);
            jScrollPane1.setViewportView(tableExtensionProduct);

            javax.swing.GroupLayout panelTongLayout = new javax.swing.GroupLayout(panelTong);
            panelTong.setLayout(panelTongLayout);
            panelTongLayout.setHorizontalGroup(
                panelTongLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 827, Short.MAX_VALUE)
            );
            panelTongLayout.setVerticalGroup(
                panelTongLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(panelTongLayout.createSequentialGroup()
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 59, Short.MAX_VALUE)
                    .addGap(96, 96, 96))
            );

            javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
            jPanel1.setLayout(jPanel1Layout);
            jPanel1Layout.setHorizontalGroup(
                jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                    .addComponent(panelTong, javax.swing.GroupLayout.DEFAULT_SIZE, 833, Short.MAX_VALUE)
                    .addContainerGap())
            );
            jPanel1Layout.setVerticalGroup(
                jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel1Layout.createSequentialGroup()
                    .addComponent(panelTong, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addContainerGap(361, Short.MAX_VALUE))
            );

            javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
            this.setLayout(layout);
            layout.setHorizontalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            );
            layout.setVerticalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            );
        }// </editor-fold>//GEN-END:initComponents
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JPanel panelTong;
    private javax.swing.JTable tableExtensionProduct;
    // End of variables declaration//GEN-END:variables

     @Override
    public String getUserInterfaceName() {
        return getClass().getSimpleName();
    }

    @Override
    public String getUserInterfaceDescription() {
        return "Giao diện thông tin chi tiết về giá và sản xuất của sản phẩm";
    }

    @Override
    public String getModuleName() {
        return Installer.MODULE_NAME;
    }
}

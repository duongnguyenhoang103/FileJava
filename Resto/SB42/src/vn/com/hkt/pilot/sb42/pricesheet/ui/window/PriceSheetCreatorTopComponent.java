/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package vn.com.hkt.pilot.sb42.pricesheet.ui.window;

import com.vn.hkt.core.cookie.api.PricesheetResetCookie;
import com.vn.hkt.core.cookie.api.PricesheetSaveCookie;
import com.vn.hkt.core.cookie.api.PricesheetSaveListCookie;
import com.vn.hkt.core.cookie.api.PricesheetUpdateCookie;
import java.awt.GridLayout;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import org.openide.util.NbBundle;
import org.openide.windows.TopComponent;
import org.netbeans.api.settings.ConvertAsProperties;
import org.openide.awt.ActionID;
import org.openide.awt.ActionReference;
import org.openide.util.Lookup;
import vn.com.hkt.pilot.identity.presentation.api.IUserInterface;
import vn.com.hkt.pilot.price.viewer.api.IPriceSheetCreator;
import vn.com.hkt.pilot.sb42.pricesheet.Installer;
import vn.com.hkt.pilot.toobar.api.IResetFontSize;

/**
 * Top component which displays something.
 */
@ConvertAsProperties(dtd = "-//vn.com.hkt.pilot.sb42.pricesheet.ui.window//PriceSheetCreator//EN",
autostore = false)
@TopComponent.Description(preferredID = "PriceSheetCreatorTopComponent",
//iconBase="SET/PATH/TO/ICON/HERE", 
persistenceType = TopComponent.PERSISTENCE_ALWAYS)
@TopComponent.Registration(mode = "editor", openAtStartup = false)
@ActionID(category = "Window", id = "vn.com.hkt.pilot.sb42.pricesheet.ui.window.PriceSheetCreatorTopComponent")
@ActionReference(path = "Menu/Window" /*, position = 333 */)
@TopComponent.OpenActionRegistration(displayName = "#CTL_PriceSheetCreatorAction",
preferredID = "PriceSheetCreatorTopComponent")
public final class PriceSheetCreatorTopComponent extends TopComponent implements 
        IUserInterface, IResetFontSize, ActionListener{

    private IPriceSheetCreator priceSheetCreator;
    
    
    public PriceSheetCreatorTopComponent() {
        initComponents();
        panelContent.setLayout(new GridLayout());
        setName(NbBundle.getMessage(PriceSheetCreatorTopComponent.class, "CTL_PriceSheetCreatorTopComponent"));
        setToolTipText(NbBundle.getMessage(PriceSheetCreatorTopComponent.class, "HINT_PriceSheetCreatorTopComponent"));

        priceSheetCreator = Lookup.getDefault().lookup(IPriceSheetCreator.class);
        JPanel panel = null;
        if(priceSheetCreator!=null){
            panel = priceSheetCreator.getPriceCreator();
            panelContent.add(panel);
        }
        else{
            JOptionPane.showMessageDialog(null, "Not found!!");
        }
        
        btnAdd.addActionListener(this);
        btnSave.addActionListener(this);
        btnSaveList.addActionListener(this);
        btnUpdate.addActionListener(this);
        
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panelContent = new javax.swing.JPanel();
        panelFooter = new javax.swing.JPanel();
        btnAdd = new javax.swing.JButton();
        btnUpdate = new javax.swing.JButton();
        btnSave = new javax.swing.JButton();
        btnSaveList = new javax.swing.JButton();
        btnExit = new javax.swing.JButton();

        javax.swing.GroupLayout panelContentLayout = new javax.swing.GroupLayout(panelContent);
        panelContent.setLayout(panelContentLayout);
        panelContentLayout.setHorizontalGroup(
            panelContentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 805, Short.MAX_VALUE)
        );
        panelContentLayout.setVerticalGroup(
            panelContentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 440, Short.MAX_VALUE)
        );

        org.openide.awt.Mnemonics.setLocalizedText(btnAdd, org.openide.util.NbBundle.getMessage(PriceSheetCreatorTopComponent.class, "PriceSheetCreatorTopComponent.btnAdd.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(btnUpdate, org.openide.util.NbBundle.getMessage(PriceSheetCreatorTopComponent.class, "PriceSheetCreatorTopComponent.btnUpdate.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(btnSave, org.openide.util.NbBundle.getMessage(PriceSheetCreatorTopComponent.class, "PriceSheetCreatorTopComponent.btnSave.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(btnSaveList, org.openide.util.NbBundle.getMessage(PriceSheetCreatorTopComponent.class, "PriceSheetCreatorTopComponent.btnSaveList.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(btnExit, org.openide.util.NbBundle.getMessage(PriceSheetCreatorTopComponent.class, "PriceSheetCreatorTopComponent.btnExit.text")); // NOI18N
        btnExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExitActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelFooterLayout = new javax.swing.GroupLayout(panelFooter);
        panelFooter.setLayout(panelFooterLayout);
        panelFooterLayout.setHorizontalGroup(
            panelFooterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelFooterLayout.createSequentialGroup()
                .addContainerGap(311, Short.MAX_VALUE)
                .addComponent(btnAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnSave, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnSaveList)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnExit, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        panelFooterLayout.setVerticalGroup(
            panelFooterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelFooterLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelFooterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnExit)
                    .addComponent(btnSave)
                    .addComponent(btnUpdate)
                    .addComponent(btnAdd)
                    .addComponent(btnSaveList))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panelFooter, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(panelContent, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(panelContent, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(panelFooter, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
    }// </editor-fold>//GEN-END:initComponents

private void btnExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExitActionPerformed
// TODO add your handling code here:
    this.close();
}//GEN-LAST:event_btnExitActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnExit;
    private javax.swing.JButton btnSave;
    private javax.swing.JButton btnSaveList;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JPanel panelContent;
    private javax.swing.JPanel panelFooter;
    // End of variables declaration//GEN-END:variables
    @Override
    public void componentOpened() {
        // TODO add custom code on component opening
    }

    @Override
    public void componentClosed() {
        // TODO add custom code on component closing
    }

    void writeProperties(java.util.Properties p) {
        // better to version settings since initial version as advocated at
        // http://wiki.apidesign.org/wiki/PropertyFiles
        p.setProperty("version", "1.0");
        // TODO store your settings
    }

    void readProperties(java.util.Properties p) {
        String version = p.getProperty("version");
        // TODO read your settings according to their version
    }

    @Override
    public String getUserInterfaceName() {
        return getClass().getSimpleName();
    }

    @Override
    public String getUserInterfaceDescription() {
        return "Giao diện chính tạo bảng giá";
    }

    @Override
    public String getModuleName() {
        return Installer.MODULE_NAME;
    }

    @Override
    public void resetFont() {
        throw new UnsupportedOperationException("Not supported yet.");
    }

    @Override
    public void resetSize() {
        throw new UnsupportedOperationException("Not supported yet.");
    }

    @Override
    public void resetColorRowTable() {
        throw new UnsupportedOperationException("Not supported yet.");
    }

    @Override
    public void resetColorWord() {
        throw new UnsupportedOperationException("Not supported yet.");
    }

    @Override
    public void resetColorTitle() {
        throw new UnsupportedOperationException("Not supported yet.");
    }

    @Override
    public void resetColorMouse() {
        throw new UnsupportedOperationException("Not supported yet.");
    }

    @Override
    public void actionPerformed(ActionEvent e) {
        if(e.getSource()==btnAdd){
            PricesheetResetCookie resetCookie = Lookup.getDefault().lookup(PricesheetResetCookie.class);
            if(resetCookie!=null){
                resetCookie.resetCookie();
            }
        }
        if(e.getSource()==btnSave){
            PricesheetSaveCookie saveCookie = Lookup.getDefault().lookup(PricesheetSaveCookie.class);
            if(saveCookie!=null){
                saveCookie.savePriceSheet();
            }
        }
        if(e.getSource()==btnUpdate){
            PricesheetUpdateCookie updateCookie = Lookup.getDefault().lookup(PricesheetUpdateCookie.class);
            if(updateCookie!=null){
                updateCookie.updatePricesheet();
            }
        }
        if(e.getSource()==btnSaveList){
            PricesheetSaveListCookie saveListCookie = Lookup.getDefault().lookup(PricesheetSaveListCookie.class);
            if(saveListCookie!=null){
                saveListCookie.saveListPricesheet();
            }
        }
    }
}

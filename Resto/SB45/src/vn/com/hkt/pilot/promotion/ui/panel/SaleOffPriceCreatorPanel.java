/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * SaleOffPriceCreatorPanel.java
 *
 * Created on Feb 25, 2012, 9:12:03 AM
 */
package vn.com.hkt.pilot.promotion.ui.panel;

import java.awt.Color;
import java.awt.Font;
import vn.com.hkt.pilot.promotion.ui.cell.SaleOffPiceTableCell;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.ArrayList;
import java.util.Collections;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JTable;
import org.openide.util.Lookup;
import org.openide.util.lookup.AbstractLookup;
import org.openide.util.lookup.InstanceContent;
import org.openide.util.lookup.ServiceProvider;
import org.openide.windows.TopComponent;
import org.openide.windows.WindowManager;
import vn.com.hkt.basic.api.ISystemSotfwareBN;
import vn.com.hkt.pilot.entities.system.SystemSoftware;
import vn.com.hkt.pilot.identity.presentation.api.IUserInterface;
import vn.com.hkt.pilot.promotion.Installer;
import vn.com.hkt.pilot.promotion.entity.Promotion;
import vn.com.hkt.pilot.promotion.entity.SaleOff;
import vn.com.hkt.pilot.promotion.viewer.api.IPromotionCreator;
import vn.com.hkt.pilot.toobar.api.IResetFontSize;
import vn.com.hkt.pilot.ui.colortable.StripedTableCellRenderer;

/**
 *
 * @author khangpn
 */
@ServiceProvider(service = IPromotionCreator.class)
public class SaleOffPriceCreatorPanel extends javax.swing.JPanel implements IPromotionCreator,
        ActionListener, IResetFontSize, IUserInterface {

    private Lookup lookup;
    private InstanceContent content = new InstanceContent();
    private SaleOffPiceTableCell tableCell;
    private SaleOff saleOff;
    private Promotion promotion;
    private ISystemSotfwareBN sotfwareBN = Lookup.getDefault().lookup(ISystemSotfwareBN.class);
    private List<SystemSoftware> listS = new ArrayList<SystemSoftware>();
    private int size;
    private String font;
    private boolean isProductSaleOff = false;

    /** Creates new form SaleOffPriceCreatorPanel */
    public SaleOffPriceCreatorPanel() {
        initComponents();

        lookup = new AbstractLookup(content);

        saleOff = new SaleOff();
        promotion = new Promotion();

        tblSaleOffPrice.setRowHeight(26);

        tableCell = new SaleOffPiceTableCell(this);
        tblSaleOffPrice.getColumnModel().getColumn(0).setCellEditor(tableCell);
        tblSaleOffPrice.getColumnModel().getColumn(0).setCellRenderer(tableCell);

        tblSaleOffPrice.getColumnModel().getColumn(1).setCellEditor(tableCell);
        tblSaleOffPrice.getColumnModel().getColumn(1).setCellRenderer(tableCell);

        tblSaleOffPrice.getColumnModel().getColumn(2).setCellEditor(tableCell);
        tblSaleOffPrice.getColumnModel().getColumn(2).setCellRenderer(tableCell);

        tblSaleOffPrice.getColumnModel().getColumn(3).setCellEditor(tableCell);
        tblSaleOffPrice.getColumnModel().getColumn(3).setCellRenderer(tableCell);

        btnExit.addActionListener(this);
        btnNew.addActionListener(this);
        btnSave.addActionListener(this);
        btnSaveList.addActionListener(this);

        resetColorRowTable();

    }

    protected void reSetModel() {
        tblSaleOffPrice.setModel(new javax.swing.table.DefaultTableModel(
                new Object[][]{
                    {"Tên chương trình", " ", "", " "},
                    {"Mã chương trình", " ", "Phân loại", " "},
                    {"Giá trị (%)", " ", "Giá trị tiền", " "},
                    {"Theo giờ từ", " ", "Đến", " "},
                    {"Theo ngày từ", " ", "Đến", " "},
                    {"Phân loại", " ", "Cách tính", " "}
                },
                new String[]{
                    "", "", "", ""
                }) {

            boolean[] canEdit = new boolean[]{
                false, true, false, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                if ((columnIndex == 0) || (columnIndex == 2)) {
                    return false;
                }
                return true;
            }
        });
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane2 = new javax.swing.JScrollPane();
        jPanel2 = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        btnNew = new javax.swing.JButton();
        btnSave = new javax.swing.JButton();
        btnSaveList = new javax.swing.JButton();
        btnExit = new javax.swing.JButton();
        panelContent = new javax.swing.JPanel();
        panelPrice = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblSaleOffPrice = new javax.swing.JTable();

        jPanel2.setPreferredSize(new java.awt.Dimension(0, 0));
        jPanel2.setRequestFocusEnabled(false);

        btnNew.setText(org.openide.util.NbBundle.getMessage(SaleOffPriceCreatorPanel.class, "SaleOffPriceCreatorPanel.btnNew.text")); // NOI18N

        btnSave.setText(org.openide.util.NbBundle.getMessage(SaleOffPriceCreatorPanel.class, "SaleOffPriceCreatorPanel.btnSave.text")); // NOI18N

        btnSaveList.setText(org.openide.util.NbBundle.getMessage(SaleOffPriceCreatorPanel.class, "SaleOffPriceCreatorPanel.btnSaveList.text")); // NOI18N

        btnExit.setText(org.openide.util.NbBundle.getMessage(SaleOffPriceCreatorPanel.class, "SaleOffPriceCreatorPanel.btnExit.text")); // NOI18N

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(258, Short.MAX_VALUE)
                .addComponent(btnNew, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnSave, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnSaveList)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnExit, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnNew)
                    .addComponent(btnSave)
                    .addComponent(btnSaveList)
                    .addComponent(btnExit))
                .addContainerGap())
        );

        tblSaleOffPrice.setModel(new javax.swing.table.DefaultTableModel(
            new Object[][]{
                {"Tên chương trình", " ", "", " "},
                {"Mã chương trình", " ", "Phân loại", " "},
                {"Giá trị (%)", " ", "Giá trị tiền", " "},
                {"Theo giờ từ", " ", "Đến", " "},
                {"Theo ngày từ", " ", "Đến", " "},
                {"Phân loại", " ", "Cách tính", " "}
            },
            new String[]{
                "", "", "", ""
            }) {

                boolean[] canEdit = new boolean[]{
                    false, true, false, true
                };

                public boolean isCellEditable(int rowIndex, int columnIndex) {
                    if ((columnIndex == 0 && rowIndex!=2) || (columnIndex == 2 && rowIndex!=2)) {
                        return false;
                    }
                    return true;
                }
            });
            jScrollPane1.setViewportView(tblSaleOffPrice);

            javax.swing.GroupLayout panelPriceLayout = new javax.swing.GroupLayout(panelPrice);
            panelPrice.setLayout(panelPriceLayout);
            panelPriceLayout.setHorizontalGroup(
                panelPriceLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 618, Short.MAX_VALUE)
            );
            panelPriceLayout.setVerticalGroup(
                panelPriceLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 414, Short.MAX_VALUE)
            );

            javax.swing.GroupLayout panelContentLayout = new javax.swing.GroupLayout(panelContent);
            panelContent.setLayout(panelContentLayout);
            panelContentLayout.setHorizontalGroup(
                panelContentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(panelPrice, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            );
            panelContentLayout.setVerticalGroup(
                panelContentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(panelPrice, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            );

            javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
            jPanel2.setLayout(jPanel2Layout);
            jPanel2Layout.setHorizontalGroup(
                jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGap(0, 646, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(panelContent, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(18, 18, 18)))
            );
            jPanel2Layout.setVerticalGroup(
                jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGap(0, 471, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(panelContent, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)))
            );

            jScrollPane2.setViewportView(jPanel2);

            javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
            this.setLayout(layout);
            layout.setHorizontalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 648, Short.MAX_VALUE)
            );
            layout.setVerticalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 473, Short.MAX_VALUE)
            );
        }// </editor-fold>//GEN-END:initComponents
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnExit;
    private javax.swing.JButton btnNew;
    private javax.swing.JButton btnSave;
    private javax.swing.JButton btnSaveList;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JPanel panelContent;
    private javax.swing.JPanel panelPrice;
    private javax.swing.JTable tblSaleOffPrice;
    // End of variables declaration//GEN-END:variables

    public Promotion getPromotion() {
        return promotion;
    }

    public JPanel getPanelPrice() {
        return panelPrice;
    }

    public void setPanelPrice(JPanel panelPrice) {
        this.panelPrice = panelPrice;
    }

    public JPanel getPanelContent() {
        return panelContent;
    }

    public boolean isIsProductSaleOff() {
        return isProductSaleOff;
    }

    public void setIsProductSaleOff(boolean isProductSaleOff) {
        this.isProductSaleOff = isProductSaleOff;
    }

    public void setPanelContent(JPanel panelContent) {
        this.panelContent = panelContent;
    }

    public void setPromotion(Promotion promotion) {
        this.promotion = promotion;
    }

    public SaleOff getSaleOff() {
        return saleOff;
    }

    public void setSaleOff(SaleOff saleOff) {
        this.saleOff = saleOff;
    }

    public JTable getTblSaleOffPrice() {
        return tblSaleOffPrice;
    }

    public void setTblSaleOffPrice(JTable tblSaleOffPrice) {
        this.tblSaleOffPrice = tblSaleOffPrice;
    }

    @Override
    public JPanel getPromotionCreator() {
        return this;
    }

    @Override
    public Lookup getPromotionLookup() {
        return lookup;
    }

    @Override
    public double getLevelNumber() {
        return 1.0;
    }

    @Override
    public void actionPerformed(ActionEvent e) {
        if (e.getSource() == btnSave) {
            if (save()) {
                JOptionPane.showMessageDialog(null, "Saved!");
                tableCell.reset();
            }
        }
        if (e.getSource() == btnExit) {
            TopComponent topComponent = WindowManager.getDefault().
                    findTopComponent("PromotionCreatorTopComponent");
            if (topComponent != null) {
                if (topComponent.isOpened()) {
                    topComponent.close();
                }
            }
        }
        if (e.getSource() == btnNew) {
            tableCell.reset(); 
            getPanelContent().removeAll();
            getPanelContent().invalidate();
            getPanelContent().revalidate();
            getPanelContent().repaint();
        }
        if (e.getSource() == btnSaveList) {
            if (save()) {
                JOptionPane.showMessageDialog(null, "Saved!");
                tableCell.reset();

                TopComponent component = WindowManager.getDefault().
                        findTopComponent("PromotionViewerTopComponent");
                if (component != null) {
                    if (!component.isOpened()) {
                        component.open();
                    }
                }

                TopComponent topComponent = WindowManager.getDefault().
                        findTopComponent("PromotionCreatorTopComponent");

                if (topComponent != null) {
                    if (topComponent.isOpened()) {
                        topComponent.close();
                    }
                }
            }
        }
    }

    protected boolean save() {
        if (promotion == null) {
            return false;
        } else {
            if (saleOff == null) {
                return false;
            } else {
                promotion.setPromotionType(promotion.PROMOTION_TYPE_PRICE);
                if (promotion.getAccessDataOfEntity().insert(promotion)) {
                    Promotion p = new Promotion();
                    p.setId(promotion.getId());
                    content.set(Collections.singleton(p), null);
                    if (!isProductSaleOff) {
                        saleOff.setPromotionIdActual(promotion.getId());
                        return saleOff.getAccessDataOfEntity().insert(saleOff);
                    }
                }
            }
        }
        return false;
    }

    // Liên thông font cỡ chữ, màu
    @Override
    public void resetFont() {
        listS = sotfwareBN.selectAll();
        size = tblSaleOffPrice.getFont().getSize();
        font = listS.get(0).getFont().getFontName();
        tblSaleOffPrice.setFont(new Font(font, 0, size));
    }

    @Override
    public void resetColorRowTable() {
        listS = sotfwareBN.selectAll();

        Color colorL = new Color(listS.get(0).getColorLight().getRed(), listS.get(0).getColorLight().getGreen(), listS.get(0).getColorLight().getBlue());
        Color colorD = new Color(listS.get(0).getColorDark().getRed(), listS.get(0).getColorDark().getGreen(), listS.get(0).getColorDark().getBlue());
        StripedTableCellRenderer.installInColumn(tblSaleOffPrice, colorL, null, colorD, null);
        tblSaleOffPrice.repaint();
    }

    @Override
    public void resetSize() {
        listS = sotfwareBN.selectAll();
        font = tblSaleOffPrice.getFont().getFontName();
        size = listS.get(0).getSizeWord();
        tblSaleOffPrice.setFont(new Font(font, 0, size));

    }

    @Override
    public void resetColorWord() {
        listS = sotfwareBN.selectAll();
        Color color = new Color(listS.get(0).getColorWord().getRed(), listS.get(0).getColorWord().getGreen(), listS.get(0).getColorWord().getBlue());
        tblSaleOffPrice.setForeground(color);
        tblSaleOffPrice.repaint();
    }

    @Override
    public void resetColorTitle() {
        listS = sotfwareBN.selectAll();
        Color color = new Color(listS.get(0).getColorTitle().getRed(), listS.get(0).getColorTitle().getGreen(), listS.get(0).getColorTitle().getBlue());
        tblSaleOffPrice.getTableHeader().setForeground(color);
        tblSaleOffPrice.repaint();
    }

    @Override
    public void resetColorMouse() {
        listS = sotfwareBN.selectAll();
        Color color = new Color(listS.get(0).getColorMouseClick().getRed(), listS.get(0).getColorMouseClick().getGreen(), listS.get(0).getColorMouseClick().getBlue());
        tblSaleOffPrice.setSelectionBackground(color);
        tblSaleOffPrice.repaint();
    }

    @Override
    public String toString() {
        return "KM giá";
    }

    @Override
    public String getUserInterfaceName() {
        return getClass().getSimpleName();
    }

    @Override
    public String getUserInterfaceDescription() {
        return "Giao diện tạo hình thức giảm giá";
    }

    @Override
    public String getModuleName() {
        return Installer.MODULE_NAME;
    }
}

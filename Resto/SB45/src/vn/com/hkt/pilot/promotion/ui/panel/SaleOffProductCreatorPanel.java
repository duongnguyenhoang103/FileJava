/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * SaleOffProductViewerPanel.java
 *
 * Created on Feb 25, 2012, 9:07:38 AM
 */
package vn.com.hkt.pilot.promotion.ui.panel;

import java.awt.Color;
import java.awt.Font;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.util.ArrayList;
import java.util.Collection;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import org.openide.util.Lookup;
import org.openide.util.LookupEvent;
import org.openide.util.LookupListener;
import org.openide.util.lookup.AbstractLookup;
import org.openide.util.lookup.InstanceContent;
import vn.com.hkt.basic.api.ISystemSotfwareBN;
import vn.com.hkt.pilot.entities.system.SystemSoftware;
import vn.com.hkt.pilot.identity.presentation.api.IUserInterface;
import vn.com.hkt.pilot.keymanager.api.CreateKey;
import vn.com.hkt.pilot.promotion.Installer;
import vn.com.hkt.pilot.promotion.entity.Promotion;
import vn.com.hkt.pilot.promotion.entity.SaleOffProduct;
import vn.com.hkt.pilot.promotion.ui.cell.SaleOffProductCreatorCell;
import vn.com.hkt.pilot.promotion.viewer.api.IPromotionCreator;
import vn.com.hkt.pilot.toobar.api.IResetFontSize;
import vn.com.hkt.pilot.ui.colortable.StripedTableCellRenderer;

/**
 *
 * @author khangpn
 */
public class SaleOffProductCreatorPanel extends javax.swing.JPanel implements
        IPromotionCreator, IResetFontSize, LookupListener,IUserInterface {

    private Lookup lookup;
    private InstanceContent content = new InstanceContent();
    private DefaultTableModel tableModel;
    private ISystemSotfwareBN sotfwareBN = Lookup.getDefault().lookup(ISystemSotfwareBN.class);
    private List<SystemSoftware> listS = new ArrayList<SystemSoftware>();
    private int size;
    private String font;
    
    private List<Lookup.Result<Promotion>> results = new ArrayList<Lookup.Result<Promotion>>();
    private Collection<? extends IPromotionCreator> promotionCreators;
    private SaleOffPriceCreatorPanel saleOffPriceCreatorPanel;
    private SaleOffProduct saleOffProduct;
    
    /** Creates new form SaleOffProductViewerPanel */
    public SaleOffProductCreatorPanel(SaleOffPriceCreatorPanel saleOffPriceCreatorPanel) {
        initComponents();
        
        this.saleOffPriceCreatorPanel = saleOffPriceCreatorPanel;
        
        saleOffProduct = new SaleOffProduct();
        
        if(saleOffPriceCreatorPanel!=null){
            saleOffPriceCreatorPanel.setIsProductSaleOff(true); // Chuyển sang KM SP
        }
        
        lookup = new AbstractLookup(content);

        SaleOffProductCreatorCell saleOffProductCreatorCell = new SaleOffProductCreatorCell(this);
        tblSaleOffProductViewer.getColumnModel().getColumn(0).setCellEditor(saleOffProductCreatorCell);
        tblSaleOffProductViewer.getColumnModel().getColumn(2).setCellEditor(saleOffProductCreatorCell);
        tblSaleOffProductViewer.getColumnModel().getColumn(4).setCellEditor(saleOffProductCreatorCell);
        tblSaleOffProductViewer.getColumnModel().getColumn(5).setCellEditor(saleOffProductCreatorCell);
        tblSaleOffProductViewer.getColumnModel().getColumn(6).setCellEditor(saleOffProductCreatorCell);
        tblSaleOffProductViewer.setRowHeight(26);
        tblSaleOffProductViewer.addMouseListener(new MouseAdapter() {

            @Override
            public void mouseClicked(MouseEvent e) {
                super.mouseClicked(e);
                int row = tblSaleOffProductViewer.getSelectedRow();
                int S = tblSaleOffProductViewer.getRowCount()-1;
                if(S==row){
                    String[] rowInsert = {" "," "," "," "," "," "," "};
                    tableModel = (DefaultTableModel) tblSaleOffProductViewer.getModel();                    
                    tableModel.addRow(rowInsert);
                    tblSaleOffProductViewer.setModel(tableModel);
                }
            }
            
        });
        resetColorRowTable();
        
        promotionCreators = Lookup.getDefault().lookupAll(IPromotionCreator.class);
        if(!promotionCreators.isEmpty()){
            for(IPromotionCreator promotionCreator:promotionCreators){
                Lookup.Result<Promotion> r = promotionCreator.getPromotionLookup().lookupResult(Promotion.class);
                r.addLookupListener(this);
                results.add(r);
            }
        }
                
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tblSaleOffProductViewer = new javax.swing.JTable();

        tblSaleOffProductViewer.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "Mã SP Chính", "Tên SP Chính", "Mã SP KM", "Tên SP KM", "Số lượng SP chính", "Số lượng SP KM", "Ghi chú"
            }
        ));
        jScrollPane1.setViewportView(tblSaleOffProductViewer);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 524, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
    }// </editor-fold>//GEN-END:initComponents
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblSaleOffProductViewer;
    // End of variables declaration//GEN-END:variables

    public JTable getTblSaleOffProductViewer() {
        return tblSaleOffProductViewer;
    }

    public void setTblSaleOffProductViewer(JTable tblSaleOffProductViewer) {
        this.tblSaleOffProductViewer = tblSaleOffProductViewer;
    }

    public SaleOffProduct getSaleOffProduct() {
        return saleOffProduct;
    }

    public void setSaleOffProduct(SaleOffProduct saleOffProduct) {
        this.saleOffProduct = saleOffProduct;
    }

    
   
    @Override
    public Lookup getPromotionLookup() {
        return lookup;
    }

    @Override
    public double getLevelNumber() {
        return 1.1;
    }

    @Override
    public String toString() {
        return "Khuyến mãi SP";
    }

    // Liên thông font cỡ chữ, màu
    @Override
    public void resetFont() {
        listS = sotfwareBN.selectAll();
        size = tblSaleOffProductViewer.getFont().getSize();
        font = listS.get(0).getFont().getFontName();
        tblSaleOffProductViewer.setFont(new Font(font, 0, size));
    }

    @Override
    public void resetColorRowTable() {
        listS = sotfwareBN.selectAll();
//        ISystemToolbar systemToolbar=  (ISystemToolbar) BasicToolbarManager.getToolbarManager().getBasicToolbar().getTabToolbar(ISystemToolbar.TAB_INDEX);
//        Color x= systemToolbar.getColorDark();

        Color colorL = new Color(listS.get(0).getColorLight().getRed(), listS.get(0).getColorLight().getGreen(), listS.get(0).getColorLight().getBlue());
        Color colorD = new Color(listS.get(0).getColorDark().getRed(), listS.get(0).getColorDark().getGreen(), listS.get(0).getColorDark().getBlue());
        StripedTableCellRenderer.installInColumn(tblSaleOffProductViewer, colorL, null, colorD, null);
        tblSaleOffProductViewer.repaint();
    }

    @Override
    public void resetSize() {
        listS = sotfwareBN.selectAll();
        font = tblSaleOffProductViewer.getFont().getFontName();
        size = listS.get(0).getSizeWord();
        tblSaleOffProductViewer.setFont(new Font(font, 0, size));
        
    }

    @Override
    public void resetColorWord() {
        listS = sotfwareBN.selectAll();
        Color color = new Color(listS.get(0).getColorWord().getRed(), listS.get(0).getColorWord().getGreen(), listS.get(0).getColorWord().getBlue());
        tblSaleOffProductViewer.setForeground(color);
        tblSaleOffProductViewer.repaint();
    }

    @Override
    public void resetColorTitle() {
        listS = sotfwareBN.selectAll();
        Color color = new Color(listS.get(0).getColorTitle().getRed(), listS.get(0).getColorTitle().getGreen(), listS.get(0).getColorTitle().getBlue());
        tblSaleOffProductViewer.getTableHeader().setForeground(color);
        tblSaleOffProductViewer.repaint();
    }

    @Override
    public void resetColorMouse() {
        listS = sotfwareBN.selectAll();
        Color color = new Color(listS.get(0).getColorMouseClick().getRed(), listS.get(0).getColorMouseClick().getGreen(), listS.get(0).getColorMouseClick().getBlue());
        tblSaleOffProductViewer.setSelectionBackground(color);
        tblSaleOffProductViewer.repaint();
    }

    @Override
    public JPanel getPromotionCreator() {
        return this;
    }

    @Override
    public void resultChanged(LookupEvent le) {
        JOptionPane.showMessageDialog(null, "found some promotion saved...");
        Lookup.Result<Promotion> r = (Lookup.Result)le.getSource();
        Collection<? extends Promotion> promotions = r.allInstances();
        if(!promotions.isEmpty()){
            for(Promotion p:promotions){
                String key = " ";
                CreateKey createKey = new CreateKey();
                key = createKey.createKey("SLP");
                saleOffProduct.setSaleOffProductID(key);
                saleOffProduct.setPromotionIdActual(p.getId());
                if(saleOffProduct.getAccessDataOfEntity().insert(saleOffProduct)){
                    JOptionPane.showMessageDialog(null, "Saved Saleoff Product!");
                }
                else{
                    JOptionPane.showMessageDialog(null, "Failed Saleoff Product!");
                }
            }
            
        }
    }

     @Override
    public String getUserInterfaceName() {
        return getClass().getSimpleName();
    }

    @Override
    public String getUserInterfaceDescription() {
        return "Giao diện tạo hình thức giảm giá cho sản phẩm";
    }

    @Override
    public String getModuleName() {
        return Installer.MODULE_NAME;
    }
    
}

/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package vn.com.hkt.ui.main.person;

import java.awt.BorderLayout;
import java.awt.Dimension;
import java.awt.GridLayout;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.Collection;
import javax.swing.*;
import org.openide.util.NbBundle;
import org.openide.windows.TopComponent;
import org.netbeans.api.settings.ConvertAsProperties;
import org.openide.awt.ActionID;
import org.openide.awt.ActionReference;
import org.openide.util.Lookup;
import org.openide.util.lookup.ServiceProvider;
import org.openide.windows.WindowManager;
import vn.com.hkt.pilot.enterprise.viewer.api.IEnterpriseHelp;
import vn.com.hkt.pilot.person.viewer.api.HelpTutorialPerson;
import vn.com.hkt.pilot.person.viewer.api.IPersonCreater;
import vn.com.hkt.pilot.person.viewer.api.IPersonExtCreater;

/**
 * Top component which displays something.
 */
@ConvertAsProperties(dtd = "-//vn.com.hkt.ui.main.person//PersonTutorialCreator//EN",
autostore = false)
@TopComponent.Description(preferredID = "PersonTutorialCreatorTopComponent",
//iconBase="SET/PATH/TO/ICON/HERE", 
persistenceType = TopComponent.PERSISTENCE_ALWAYS)
@TopComponent.Registration(mode = "properties", openAtStartup = false)
@ActionID(category = "Window", id = "vn.com.hkt.ui.main.person.PersonTutorialCreatorTopComponent")
@ActionReference(path = " " /*
 * , position = 333
 */)
@TopComponent.OpenActionRegistration(displayName = "#CTL_PersonTutorialCreatorAction",
preferredID = "PersonTutorialCreatorTopComponent")
@ServiceProvider(service = HelpTutorialPerson.class)
public final class PersonTutorialCreatorTopComponent extends TopComponent implements HelpTutorialPerson, ActionListener {

    private JPanel panelSB02 = null;
    private JPanel panelSB22 = null;
    private JPanel panelSB21 = null;
    private JPanel panelSB23 = null;
    private JPanel panelSB24 = null;
    private JPanel panelSB25 = null;
    private Collection<? extends IPersonExtCreater> personExtCreater;
    private IPersonCreater personCreater;
    private JPanel panelEditID = null;
    private JPanel panelEditMission = null;
    private JPanel panelDiachi = null;
    private JPanel panelLevel = null;
    private JLabel label = new JLabel("           Hướng Dẫn Sử Dụng");
    private JTabbedPane tabbedPane = new JTabbedPane();
    private JTextArea textArea = new JTextArea();
    private Collection<? extends IEnterpriseHelp> enterpriseHelp = Lookup.getDefault().lookupAll(IEnterpriseHelp.class);
    private JCheckBox checkBoxBasic = null, checkBoxSB21 = null, checkBoxSB22 = null, checkBoxSB23 = null, checkBoxSB24 = null, checkBoxSB25 = null;

    public PersonTutorialCreatorTopComponent() {
        initComponents();
        setName(NbBundle.getMessage(PersonTutorialCreatorTopComponent.class, "CTL_PersonTutorialCreatorTopComponent"));
        setToolTipText(NbBundle.getMessage(PersonTutorialCreatorTopComponent.class, "HINT_PersonTutorialCreatorTopComponent"));
        if (panelEditID == null && panelEditMission == null && panelDiachi == null && panelLevel == null) {
            loadFormExtension();
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panelExtension = new javax.swing.JPanel();
        panelChecbox = new javax.swing.JPanel();
        panelButton = new javax.swing.JPanel();
        buttonAn = new javax.swing.JButton();

        javax.swing.GroupLayout panelChecboxLayout = new javax.swing.GroupLayout(panelChecbox);
        panelChecbox.setLayout(panelChecboxLayout);
        panelChecboxLayout.setHorizontalGroup(
            panelChecboxLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 247, Short.MAX_VALUE)
        );
        panelChecboxLayout.setVerticalGroup(
            panelChecboxLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 223, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout panelExtensionLayout = new javax.swing.GroupLayout(panelExtension);
        panelExtension.setLayout(panelExtensionLayout);
        panelExtensionLayout.setHorizontalGroup(
            panelExtensionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelExtensionLayout.createSequentialGroup()
                .addComponent(panelChecbox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(494, Short.MAX_VALUE))
        );
        panelExtensionLayout.setVerticalGroup(
            panelExtensionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panelChecbox, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        org.openide.awt.Mnemonics.setLocalizedText(buttonAn, org.openide.util.NbBundle.getMessage(PersonTutorialCreatorTopComponent.class, "PersonTutorialCreatorTopComponent.buttonAn.text")); // NOI18N
        buttonAn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonAnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelButtonLayout = new javax.swing.GroupLayout(panelButton);
        panelButton.setLayout(panelButtonLayout);
        panelButtonLayout.setHorizontalGroup(
            panelButtonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelButtonLayout.createSequentialGroup()
                .addContainerGap(618, Short.MAX_VALUE)
                .addComponent(buttonAn, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(29, 29, 29))
        );
        panelButtonLayout.setVerticalGroup(
            panelButtonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelButtonLayout.createSequentialGroup()
                .addContainerGap(19, Short.MAX_VALUE)
                .addComponent(buttonAn)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panelButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(panelExtension, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(panelExtension, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(panelButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void buttonAnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonAnActionPerformed
        PersonCreatorTopComponent tc = (PersonCreatorTopComponent) WindowManager.getDefault().findTopComponent("PersonCreatorTopComponent");
        tc.requestActive();
    }//GEN-LAST:event_buttonAnActionPerformed
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton buttonAn;
    private javax.swing.JPanel panelButton;
    private javax.swing.JPanel panelChecbox;
    private javax.swing.JPanel panelExtension;
    // End of variables declaration//GEN-END:variables

    @Override
    public void componentOpened() {
        personCreater = Lookup.getDefault().lookup(IPersonCreater.class);
        personExtCreater = Lookup.getDefault().lookupAll(IPersonExtCreater.class);

        if (panelEditID == null && panelEditMission == null && panelDiachi == null && panelLevel == null) {
            loadFormExtension();
        }
        if (checkBoxSB23 != null) {
            checkBoxSB23.addActionListener(this);
        }
        if (checkBoxSB21 != null) {
            checkBoxSB21.addActionListener(this);
        }
        if (checkBoxSB22 != null) {
            checkBoxSB22.addActionListener(this);
        }
        if (checkBoxSB24 != null) {
            checkBoxSB24.addActionListener(this);
        }
        if (checkBoxSB25 != null) {
            checkBoxSB25.addActionListener(this);
        }

        checkBoxBasic.addActionListener(this);
    }

    @Override
    public void componentClosed() {
        panelChecbox.removeAll();
    }

    void writeProperties(java.util.Properties p) {
        // better to version settings since initial version as advocated at
        // http://wiki.apidesign.org/wiki/PropertyFiles
        p.setProperty("version", "1.0");
        // TODO store your settings
    }

    void readProperties(java.util.Properties p) {
        String version = p.getProperty("version");
        // TODO read your settings according to their version
    }

    public JPanel getPanelSB02() {
        return panelSB02;
    }

    public void loadFormExtension() {

        panelChecbox.setLayout(new GridLayout(10, 1));
        if (personCreater != null) {
            if (panelSB02 == null) {
                panelSB02 = personCreater.getPersonCreater();
                checkBoxBasic = new JCheckBox(panelSB02.toString());
                checkBoxBasic.setSelected(true);
                checkBoxBasic.setEnabled(false);
                panelChecbox.add(checkBoxBasic);
            }
        } else {
            // panelChecbox.remove(checkBoxBasic);
        }
        if (personExtCreater != null) {
            for (IPersonExtCreater extCreator : personExtCreater) {
                double index = extCreator.getLevelNumber();
                if (index == 2.1) {
                    if (panelSB21 == null) {
                        panelSB21 = extCreator.getPersonExtCreater();
                        checkBoxSB21 = new JCheckBox(panelSB21.toString());
                        panelChecbox.add(checkBoxSB21);
                        checkBoxSB21.setSelected(true);
                        checkBoxBasic.setSelected(true);
                    }
                }
                if (index == 2.2) {
                    if (panelSB22 == null) {
                        panelSB22 = extCreator.getPersonExtCreater();
                        checkBoxSB22 = new JCheckBox(panelSB22.toString());
                        panelChecbox.add(checkBoxSB22);
                        checkBoxSB22.setSelected(true);
                        // checkBoxBasic.setSelected(true);
                    }
                }

                if (index == 2.3) {
                    if (panelSB23 == null) {
                        panelSB23 = extCreator.getPersonExtCreater();
                        checkBoxSB23 = new JCheckBox(panelSB23.toString());
                        panelChecbox.add(checkBoxSB23);
                        checkBoxSB23.setSelected(true);
                        // checkBoxBasic.setSelected(true);
                    }
                }
                if (index == 2.4) {
                    if (panelSB24 == null) {
                        panelSB24 = extCreator.getPersonExtCreater();
                        checkBoxSB24 = new JCheckBox(panelSB24.toString());
                        panelChecbox.add(checkBoxSB24);
                        checkBoxSB24.setSelected(true);
                        // checkBoxBasic.setSelected(true);
                    }
                }
                if (index == 2.5) {
                    if (panelSB25 == null) {
                        panelSB25 = extCreator.getPersonExtCreater();
                        checkBoxSB25 = new JCheckBox(panelSB25.toString());
                        panelChecbox.add(checkBoxSB25);
                        checkBoxSB25.setSelected(true);
                        // checkBoxBasic.setSelected(true);
                    }
                }

            }
            panelEditID = null;
            panelEditMission = null;
            panelDiachi = null;
            panelLevel = null;
        } else {
            // panelChecbox.remove(checBoxEx1);
        }
    }

    public JCheckBox getCheckBoxBasic() {
        return checkBoxBasic;
    }

    public JCheckBox getCheckBoxSB21() {
        return checkBoxSB21;
    }

    public JCheckBox getCheckBoxSB22() {
        return checkBoxSB22;
    }

    public JCheckBox getCheckBoxSB23() {
        return checkBoxSB23;
    }

    public JCheckBox getCheckBoxSB24() {
        return checkBoxSB24;
    }

    public JCheckBox getCheckBoxSB25() {
        return checkBoxSB25;
    }

    private void loadFormTutorial(String str) {
        panelChecbox.setLayout(new BorderLayout());
        panelChecbox.add(label, BorderLayout.NORTH);
        label.setPreferredSize(new Dimension(WIDTH, 40));
        textArea.setText(str);
        textArea.setEditable(false);
        textArea.setPreferredSize(new Dimension(500, HEIGHT));
        panelChecbox.add(textArea, BorderLayout.CENTER);
        panelSB02 = null;
        panelSB21 = null;
        panelSB22 = null;
        panelSB23 = null;
        panelSB24 = null;
        panelSB25 = null;
        panelEditMission = null;
        panelDiachi = null;
        panelEditID = null;
        panelLevel = null;
    }

    @Override
    public void getTutorial(double i, String str) {
        PersonTutorialCreatorTopComponent tc =
                (PersonTutorialCreatorTopComponent) WindowManager.getDefault().findTopComponent("PersonTutorialCreatorTopComponent");
        if (i == 0.1) {
            if (panelEditID == null) {
                tc.getPanelChecbox().removeAll();
                tc.loadFormID();
            }

        }
        if (i == 0.5) {
            if (panelEditMission == null) {
                tc.getPanelChecbox().removeAll();
                tc.loadFormMission();
            }

        }
        if ( i == 0 || i == 0.3 || i == 0.4 || i == 2.01 || i == 2.03 || i == 2.11
                || i == 2.13 || i == 2.21 || i == 2.23 || i == 2.31 || i == 2.33 || i == 2.41
                || i == 2.43 || i == 2.51 || i == 2.53 || i == 2.201 || i == 2.203 || i == 2.211 || i == 2.213
                || i == 3.01 || i == 3.03 || i == 3.11 || i == 3.13 || i == 3.21 // sb 24
                || i == 4.01 || i == 4.03 || i == 4.11 || i == 4.13 || i == 4.21 || i == 4.23 // sb25
                || i == 5.11 || i == 5.13 || i == 5.21 || i == 5.23 || i == 5.31 || i == 5.33 || i == 5.41 || i == 5.43 || i == 5.51 || i == 5.53) // sb 23
        {
            tc.getPanelChecbox().removeAll();


            tc.loadFormTutorial(str);
        }
        if (i == 2.06 || i == 0.2) {
            if (panelDiachi == null) {
                tc.getPanelChecbox().removeAll();
                tc.loadFormDiaChi();
            }

        }
        if (i == 7) {
            if (panelLevel == null) {
                tc.getPanelChecbox().removeAll();
                tc.loadFormLevel();
            }

        }
    }

    public JPanel getPanelChecbox() {
        return panelChecbox;
    }

    @Override
    public void actionPerformed(ActionEvent e) {
        JCheckBox checkBox = (JCheckBox) e.getSource();
        PersonCreatorTopComponent tc = (PersonCreatorTopComponent) WindowManager.getDefault().findTopComponent("PersonCreatorTopComponent");
        if (checkBox == checkBoxBasic) {
            tc.getPanelForm().removeAll();
            tc.loadForm();
        }
        if (checkBox == checkBoxSB21) {
            tc.getPanelForm().removeAll();
            tc.loadForm();
        }
        if (checkBox == checkBoxSB22) {
            tc.getPanelForm().removeAll();
            tc.loadForm();
        }
        if (checkBox == checkBoxSB23) {
            tc.getPanelForm().removeAll();
            tc.loadForm();
        }
        if (checkBox == checkBoxSB24) {
            tc.getPanelForm().removeAll();
            tc.loadForm();
        }
        if (checkBox == checkBoxSB25) {
            tc.getPanelForm().removeAll();
            tc.loadForm();
        }
    }

    public void loadFormID() {
        panelChecbox.setLayout(new GridLayout());
        if (enterpriseHelp != null) {
            for (IEnterpriseHelp help : enterpriseHelp) {
                // help = Lookup.getDefault().lookup(IEnterpriseHelp.class);
                double index = help.getLevelNumber();
                if (index == 2.1) {
                    if (panelEditID == null) {
                        panelEditID = help.getPanel1();

                        panelChecbox.add(panelEditID);
                        panelSB02 = null;
                        panelSB21 = null;
                        panelSB22 = null;
                        panelSB23 = null;
                        panelSB24 = null;
                        panelSB25 = null;
                        panelEditMission = null;
                        panelDiachi = null;
                        panelLevel = null;
                    }
                }
            }
        }
        panelEditID = null;
    }

    private void loadFormMission() {
        panelChecbox.setLayout(new GridLayout());
        if (enterpriseHelp != null) {
            for (IEnterpriseHelp help : enterpriseHelp) {
                double index = help.getLevelNumber();
                if (index == 1.3) {
                    if (panelEditMission == null) {
                        panelEditMission = help.getPanel1();

                        panelChecbox.add(panelEditMission);
                        panelSB02 = null;
                        panelSB21 = null;
                        panelSB22 = null;
                        panelSB23 = null;
                        panelSB24 = null;
                        panelSB25 = null;
                        panelEditID = null;
                        panelDiachi = null;
                        panelLevel = null;
                    }
                }
            }
        }
        panelEditMission = null;
    }

    private void loadFormDiaChi() {
        panelChecbox.setLayout(new GridLayout());
        if (enterpriseHelp != null) {
            for (IEnterpriseHelp help : enterpriseHelp) {
                double index = help.getLevelNumber();
                if (index == 1.2) {
                    if (panelDiachi == null) {
                        panelDiachi = help.getPanel1();

                        panelChecbox.add(panelDiachi);
                        panelSB02 = null;
                        panelSB21 = null;
                        panelSB22 = null;
                        panelSB23 = null;
                        panelSB24 = null;
                        panelSB25 = null;
                        panelEditID = null;
                        panelEditMission = null;
                        panelLevel = null;
                    }
                }
            }
        }
        panelDiachi = null;
    }

    private void loadFormLevel() {
        panelChecbox.setLayout(new GridLayout());
        if (enterpriseHelp != null) {
            for (IEnterpriseHelp help : enterpriseHelp) {
                double index = help.getLevelNumber();
                if (index == 2.4) {
                    if (panelLevel == null) {
                        panelLevel = help.getPanel1();

                        panelChecbox.add(panelLevel);
                        panelSB02 = null;
                        panelSB21 = null;
                        panelSB22 = null;
                        panelSB23 = null;
                        panelSB24 = null;
                        panelSB25 = null;
                        panelEditID = null;
                        panelEditMission = null;
                        panelDiachi = null;
                    }
                }
            }
        }

        panelLevel = null;
    }
}
/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package vn.com.hkt.ui.main.department;

import com.vn.hkt.core.cookie.api.FilterCokieTable;
import java.awt.GridLayout;
import java.awt.event.ItemEvent;
import java.awt.event.ItemListener;
import java.io.IOException;
import java.util.Collection;
import java.util.Hashtable;
import java.util.Iterator;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JPanel;
import org.openide.util.NbBundle;
import org.openide.windows.TopComponent;
import org.netbeans.api.settings.ConvertAsProperties;
import org.openide.awt.ActionID;
import org.openide.awt.ActionReference;
import org.openide.util.Exceptions;
import org.openide.util.Lookup;
import org.openide.windows.WindowManager;
import vn.com.hkt.pilot.department.viewer.api.IDepartmentExtViewer;
import vn.com.hkt.pilot.department.viewer.api.IDepartmentViewer;
import vn.com.hkt.pilot.enterprise.viewer.api.EditCookieList;
import vn.com.hkt.pilot.enterprise.viewer.api.RemoveCookieDepartment;
import vn.com.hkt.pilot.enterprise.viewer.api.SaveCookieList;
import vn.com.hkt.pilot.enterprise.viewer.api.ViewCookieList;
import vn.com.hkt.pilot.report.api.IReportListGUI;
import vn.com.hkt.pilot.toobar.api.IResetFontSize;
import vn.com.hkt.ui.main.ui.api.ITopComponentList;

/**
 * Top component which displays something.
 */
@ConvertAsProperties(dtd = "-//vn.com.hkt.ui.main.department//DepartmentViewer//EN",
autostore = false)
@TopComponent.Description(preferredID = "DepartmentViewerTopComponent",
//iconBase="SET/PATH/TO/ICON/HERE", 
persistenceType = TopComponent.PERSISTENCE_ALWAYS)
@TopComponent.Registration(mode = "editor", openAtStartup = false)
@ActionID(category = "Window", id = "vn.com.hkt.ui.main.department.DepartmentViewerTopComponent")
@ActionReference(path = "Menu/Kinh Doanh/Quản Lý Dự Án" /*, position = 333 */)
@TopComponent.OpenActionRegistration(displayName = "#CTL_DepartmentViewerAction",
preferredID = "DepartmentViewerTopComponent")
public final class DepartmentViewerTopComponent extends TopComponent implements
        ITopComponentList, ItemListener {

    private Collection<? extends IDepartmentViewer> departmentViewers;
    private Collection<? extends IDepartmentExtViewer> departmentExtViewers;
    private DefaultComboBoxModel model = null;
    private boolean isEdit = false;
    private DefaultComboBoxModel cboFilterModel;
    private Hashtable hashtable = new Hashtable();
    private int key = 0;
    private IReportListGUI panelReport = null;

    public DepartmentViewerTopComponent() {
        initComponents();
        setName(NbBundle.getMessage(DepartmentViewerTopComponent.class, "CTL_DepartmentViewerTopComponent"));
        setToolTipText(NbBundle.getMessage(DepartmentViewerTopComponent.class, "HINT_DepartmentViewerTopComponent"));
        cboSelectView.setEnabled(true);
        buttonEdit.setEnabled(true);
        buttonDelete.setEnabled(false);
        buttonSave.setEnabled(false);

        cboFilterModel = new DefaultComboBoxModel();
        cboTimkiem.setModel(cboFilterModel);
        cboTimkiem.addItemListener(this);

        load();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        panelForm = new javax.swing.JPanel();
        panleButton = new javax.swing.JPanel();
        buttonEdit = new javax.swing.JButton();
        buttonSave = new javax.swing.JButton();
        buttonExit = new javax.swing.JButton();
        buttonHelp = new javax.swing.JButton();
        buttonDelete = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        cboTimkiem = new javax.swing.JComboBox();
        txtTimKiem = new javax.swing.JTextField();
        cboSelectView = new javax.swing.JComboBox();
        jLabel2 = new javax.swing.JLabel();

        addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                formComponentShown(evt);
            }
        });

        javax.swing.GroupLayout panelFormLayout = new javax.swing.GroupLayout(panelForm);
        panelForm.setLayout(panelFormLayout);
        panelFormLayout.setHorizontalGroup(
            panelFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1125, Short.MAX_VALUE)
        );
        panelFormLayout.setVerticalGroup(
            panelFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 379, Short.MAX_VALUE)
        );

        panleButton.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        buttonEdit.setIcon(new javax.swing.ImageIcon(getClass().getResource("/vn/com/hkt/pilot/icon/modify1.png"))); // NOI18N
        org.openide.awt.Mnemonics.setLocalizedText(buttonEdit, org.openide.util.NbBundle.getMessage(DepartmentViewerTopComponent.class, "DepartmentViewerTopComponent.buttonEdit.text")); // NOI18N
        buttonEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonEditActionPerformed(evt);
            }
        });

        buttonSave.setIcon(new javax.swing.ImageIcon(getClass().getResource("/vn/com/hkt/pilot/icon/save1.png"))); // NOI18N
        org.openide.awt.Mnemonics.setLocalizedText(buttonSave, org.openide.util.NbBundle.getMessage(DepartmentViewerTopComponent.class, "DepartmentViewerTopComponent.buttonSave.text")); // NOI18N
        buttonSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonSaveActionPerformed(evt);
            }
        });

        buttonExit.setIcon(new javax.swing.ImageIcon(getClass().getResource("/vn/com/hkt/pilot/icon/exit1.png"))); // NOI18N
        org.openide.awt.Mnemonics.setLocalizedText(buttonExit, org.openide.util.NbBundle.getMessage(DepartmentViewerTopComponent.class, "DepartmentViewerTopComponent.buttonExit.text")); // NOI18N

        buttonHelp.setIcon(new javax.swing.ImageIcon(getClass().getResource("/vn/com/hkt/pilot/icon/help1.png"))); // NOI18N
        org.openide.awt.Mnemonics.setLocalizedText(buttonHelp, org.openide.util.NbBundle.getMessage(DepartmentViewerTopComponent.class, "DepartmentViewerTopComponent.buttonHelp.text")); // NOI18N

        buttonDelete.setIcon(new javax.swing.ImageIcon(getClass().getResource("/vn/com/hkt/pilot/icon/delete1.png"))); // NOI18N
        org.openide.awt.Mnemonics.setLocalizedText(buttonDelete, org.openide.util.NbBundle.getMessage(DepartmentViewerTopComponent.class, "DepartmentViewerTopComponent.buttonDelete.text")); // NOI18N
        buttonDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonDeleteActionPerformed(evt);
            }
        });

        org.openide.awt.Mnemonics.setLocalizedText(jButton1, org.openide.util.NbBundle.getMessage(DepartmentViewerTopComponent.class, "DepartmentViewerTopComponent.jButton1.text")); // NOI18N
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panleButtonLayout = new javax.swing.GroupLayout(panleButton);
        panleButton.setLayout(panleButtonLayout);
        panleButtonLayout.setHorizontalGroup(
            panleButtonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panleButtonLayout.createSequentialGroup()
                .addContainerGap(430, Short.MAX_VALUE)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(buttonEdit, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(buttonSave, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(buttonDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(buttonExit, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(buttonHelp, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        panleButtonLayout.setVerticalGroup(
            panleButtonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panleButtonLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panleButtonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(buttonHelp)
                    .addComponent(buttonExit)
                    .addComponent(buttonDelete)
                    .addComponent(buttonSave)
                    .addComponent(buttonEdit)
                    .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, 31, Short.MAX_VALUE))
                .addContainerGap())
        );

        org.openide.awt.Mnemonics.setLocalizedText(jLabel1, org.openide.util.NbBundle.getMessage(DepartmentViewerTopComponent.class, "DepartmentViewerTopComponent.jLabel1.text")); // NOI18N

        cboTimkiem.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Tên", "ID", " " }));

        txtTimKiem.setText(org.openide.util.NbBundle.getMessage(DepartmentViewerTopComponent.class, "DepartmentViewerTopComponent.txtTimKiem.text")); // NOI18N
        txtTimKiem.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txtTimKiemMouseClicked(evt);
            }
        });
        txtTimKiem.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                txtTimKiemCaretUpdate(evt);
            }
        });

        cboSelectView.setModel(new javax.swing.DefaultComboBoxModel(new String[] { " " }));
        cboSelectView.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboSelectViewActionPerformed(evt);
            }
        });

        org.openide.awt.Mnemonics.setLocalizedText(jLabel2, org.openide.util.NbBundle.getMessage(DepartmentViewerTopComponent.class, "DepartmentViewerTopComponent.jLabel2.text")); // NOI18N

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(154, 154, 154)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtTimKiem, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(31, 31, 31)
                .addComponent(cboTimkiem, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 289, Short.MAX_VALUE)
                .addComponent(jLabel2)
                .addGap(18, 18, 18)
                .addComponent(cboSelectView, javax.swing.GroupLayout.PREFERRED_SIZE, 193, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cboTimkiem, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtTimKiem, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cboSelectView, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1145, Short.MAX_VALUE)
            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel2Layout.createSequentialGroup()
                    .addContainerGap()
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(panleButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(panelForm, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addContainerGap()))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 514, Short.MAX_VALUE)
            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel2Layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addComponent(panelForm, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addComponent(panleButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap()))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void txtTimKiemMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtTimKiemMouseClicked

        if (txtTimKiem.getText().trim().equals("Tìm theo tên hoặc mã")) {             txtTimKiem.setText("");         }     }//GEN-LAST:event_txtTimKiemMouseClicked

    private void txtTimKiemCaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_txtTimKiemCaretUpdate
        if (txtTimKiem.getText().trim().length() != 0) {
            Collection<? extends FilterCokieTable> allFilters = Lookup.getDefault().lookupAll(FilterCokieTable.class);
            for (FilterCokieTable filterCookie : allFilters) {
                String value = txtTimKiem.getText().trim();
                filterCookie.filterTable(value, key);

            }
        } else {
            loadView();
        }
    }//GEN-LAST:event_txtTimKiemCaretUpdate

    private void cboSelectViewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboSelectViewActionPerformed
        // TODO add your handling code here:
        for (int i = 0; i < model.getSize(); i++) {
            Object selected = cboSelectView.getItemAt(i);
            if (selected instanceof IDepartmentExtViewer) {
                IDepartmentExtViewer p = (IDepartmentExtViewer) selected;
                p.getTable().clearSelection();
            }
            if (selected instanceof IDepartmentViewer) {
                IDepartmentViewer p = (IDepartmentViewer) selected;
                p.getTable().clearSelection();
            }

        }


        panelForm.setLayout(new GridLayout());
        Object selected = cboSelectView.getSelectedItem();
        int row = cboSelectView.getSelectedIndex();
        if (selected instanceof IDepartmentExtViewer) {
            IDepartmentExtViewer p = (IDepartmentExtViewer) selected;
            fillCombo(p);
            JPanel p2 = p.getDepartmentExtViewer();
            panelForm.removeAll();
            panelForm.setLayout(new GridLayout());
            panelForm.add(p2);
            this.close();
            this.open();
            cboSelectView.setSelectedIndex(row);
            this.requestActive();
        }
        if (selected instanceof IDepartmentViewer) {
            IDepartmentViewer p = (IDepartmentViewer) selected;
            fillCombo(p);
            JPanel p2 = p.getDepartmentViewer();
            panelForm.removeAll();
            panelForm.add(p2);
            this.close();
            this.open();
            cboSelectView.setSelectedIndex(row);
            this.requestActive();

        }
        if (selected instanceof IReportListGUI) {
            panelReport = (IReportListGUI) selected;
        } else {
            panelReport = null;
        }

    }//GEN-LAST:event_cboSelectViewActionPerformed

private void buttonEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonEditActionPerformed
// TODO add your handling code here:
    if (isEdit == false) {
        buttonEdit.setText("Hủy Bỏ");
        isEdit = true;
        buttonDelete.setEnabled(true);
        buttonSave.setEnabled(true);
    } else {
        isEdit = false;
        buttonEdit.setText("Chỉnh Sửa");
        buttonDelete.setEnabled(false);
        buttonSave.setEnabled(false);
    }

    editList();
}//GEN-LAST:event_buttonEditActionPerformed

private void buttonSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonSaveActionPerformed
// TODO add your handling code here:
    saveList();
}//GEN-LAST:event_buttonSaveActionPerformed

    private void buttonDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonDeleteActionPerformed
        // TODO add your handling code here:
        remove();
        load();
    }//GEN-LAST:event_buttonDeleteActionPerformed

private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
// TODO add your handling code here:
    if (panelReport != null) {
        panelReport.exportReport();
    }
}//GEN-LAST:event_jButton1ActionPerformed

    private void formComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_formComponentShown
        loadView();
    }//GEN-LAST:event_formComponentShown
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton buttonDelete;
    private javax.swing.JButton buttonEdit;
    private javax.swing.JButton buttonExit;
    private javax.swing.JButton buttonHelp;
    private javax.swing.JButton buttonSave;
    private javax.swing.JComboBox cboSelectView;
    private javax.swing.JComboBox cboTimkiem;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel panelForm;
    private javax.swing.JPanel panleButton;
    private javax.swing.JTextField txtTimKiem;
    // End of variables declaration//GEN-END:variables

    @Override
    public void componentOpened() {
        Set<TopComponent> tcs = WindowManager.getDefault().getRegistry().getOpened();
        for (TopComponent tc : tcs) {
            tc.close();
        }
        loadView();
    }

    @Override
    public void componentClosed() {
    }

    @Override
    public void load() {
        departmentViewers = Lookup.getDefault().lookupAll(IDepartmentViewer.class);
        departmentExtViewers = Lookup.getDefault().lookupAll(IDepartmentExtViewer.class);
        this.setLayout(new GridLayout());
        loadToCombo();
        cboSelectView.setModel(model);
        if ((departmentViewers != null)) {
            panelForm.setLayout(new GridLayout());
            Object selected = cboSelectView.getItemAt(0);
            IDepartmentViewer middle = (IDepartmentViewer) selected;
            fillCombo(middle);
            JPanel p1 = middle.getDepartmentViewer();
            panelForm.removeAll();
            panelForm.add(p1);
        }
        loadView();

    }

    public void loadView() {
        for (IDepartmentViewer iev : departmentViewers) {
            if (iev instanceof ViewCookieList) {
                try {
                    ((ViewCookieList) iev).ViewCookieList();
                } catch (IOException ex) {
                    Exceptions.printStackTrace(ex);
                }
            }
        }
        for (IDepartmentExtViewer iexv : departmentExtViewers) {
            if (iexv instanceof ViewCookieList) {
                try {
                    ((ViewCookieList) iexv).ViewCookieList();
                } catch (IOException ex) {
                    Exceptions.printStackTrace(ex);
                }
            }
        }
        reLoadFont();
        reLoadSize();
        reLoadColor();
        reLoadColorMouse();
        reLoadColorTitle();
        reLoadColorWord();
    }

    void writeProperties(java.util.Properties p) {
        // better to version settings since initial version as advocated at
        // http://wiki.apidesign.org/wiki/PropertyFiles
        p.setProperty("version", "1.0");
        // TODO store your settings
    }

    void readProperties(java.util.Properties p) {
        String version = p.getProperty("version");
        // TODO read your settings according to their version
    }

    private void remove() {
        Object selected = cboSelectView.getSelectedItem();
        if (selected != null) {
            if (selected instanceof RemoveCookieDepartment) {
                try {
                    ((RemoveCookieDepartment) selected).remove();
                } catch (IOException ex) {
                    Exceptions.printStackTrace(ex);
                }
            }
        }
    }

    public void editList() {
        for (IDepartmentViewer iev : departmentViewers) {
            if (iev instanceof EditCookieList) {
                try {
                    ((EditCookieList) iev).EditCookieList(isEdit);
                } catch (IOException ex) {
                    Exceptions.printStackTrace(ex);
                }
            }
        }
        for (IDepartmentExtViewer editCookie : departmentExtViewers) {
            if (editCookie instanceof EditCookieList) {
                try {
                    ((EditCookieList) editCookie).EditCookieList(isEdit);
                } catch (IOException ex) {
                    Exceptions.printStackTrace(ex);
                }
            }
        }
    }

    public void saveList() {
        for (IDepartmentViewer iev : departmentViewers) {
            if (iev instanceof SaveCookieList) {
                try {
                    ((SaveCookieList) iev).SaveCookieList();
                } catch (IOException ex) {
                    Exceptions.printStackTrace(ex);
                }
            }
        }
        for (IDepartmentExtViewer editCookie : departmentExtViewers) {
            if (editCookie instanceof SaveCookieList) {
                try {
                    ((SaveCookieList) editCookie).SaveCookieList();
                } catch (IOException ex) {
                    Exceptions.printStackTrace(ex);
                }
            }
        }
    }

    protected void loadToCombo() {
        model = new DefaultComboBoxModel();
        if (!departmentViewers.isEmpty()) {
            Iterator it = departmentViewers.iterator();
            while (it.hasNext()) {
                model.addElement(it.next());
            }
        }
        if (!departmentExtViewers.isEmpty()) {
            Iterator it = departmentExtViewers.iterator();
            while (it.hasNext()) {
                model.addElement(it.next());
            }
        }

    }

    public void reLoadFont() {
        for (IDepartmentViewer iev : departmentViewers) {
            if (iev instanceof IResetFontSize) {
                ((IResetFontSize) iev).resetFont();
            }
        }
        for (IDepartmentExtViewer editCookie : departmentExtViewers) {
            if (editCookie instanceof IResetFontSize) {
                ((IResetFontSize) editCookie).resetFont();
            }
        }
    }

    public void reLoadColor() {
        for (IDepartmentViewer iev : departmentViewers) {
            if (iev instanceof IResetFontSize) {
                ((IResetFontSize) iev).resetColorRowTable();
            }
        }
        for (IDepartmentExtViewer editCookie : departmentExtViewers) {
            if (editCookie instanceof IResetFontSize) {
                ((IResetFontSize) editCookie).resetColorRowTable();
            }
        }
    }

    public void reLoadSize() {
        for (IDepartmentViewer iev : departmentViewers) {
            if (iev instanceof IResetFontSize) {
                ((IResetFontSize) iev).resetSize();
            }
        }
        for (IDepartmentExtViewer editCookie : departmentExtViewers) {
            if (editCookie instanceof IResetFontSize) {
                ((IResetFontSize) editCookie).resetSize();
            }
        }
    }

    private void reLoadColorWord() {
        for (IDepartmentViewer iev : departmentViewers) {
            if (iev instanceof IResetFontSize) {
                ((IResetFontSize) iev).resetColorWord();
            }
        }
        for (IDepartmentExtViewer editCookie : departmentExtViewers) {
            if (editCookie instanceof IResetFontSize) {
                ((IResetFontSize) editCookie).resetColorWord();
            }
        }
    }

    private void reLoadColorTitle() {
        for (IDepartmentViewer iev : departmentViewers) {
            if (iev instanceof IResetFontSize) {
                ((IResetFontSize) iev).resetColorTitle();
            }
        }
        for (IDepartmentExtViewer editCookie : departmentExtViewers) {
            if (editCookie instanceof IResetFontSize) {
                ((IResetFontSize) editCookie).resetColorTitle();
            }
        }
    }

    private void reLoadColorMouse() {
        for (IDepartmentViewer iev : departmentViewers) {
            if (iev instanceof IResetFontSize) {
                ((IResetFontSize) iev).resetColorMouse();
            }
        }
        for (IDepartmentExtViewer editCookie : departmentExtViewers) {
            if (editCookie instanceof IResetFontSize) {
                ((IResetFontSize) editCookie).resetColorMouse();
            }
        }
    }

    public Hashtable getHashtable() {
        return hashtable;
    }

    public void setHashtable(Hashtable hashtable) {
        this.hashtable = hashtable;
    }

    public void fillCombo(IDepartmentExtViewer departmentExtViewer) {

        cboFilterModel.removeAllElements();

        hashtable = departmentExtViewer.getTableHeader();

        setHashtable(hashtable);
        Collection<String> enumeration = getHashtable().values();
        for (String str : enumeration) {
            cboFilterModel.addElement(str);
        }

    }

    public void fillCombo(IDepartmentViewer departmentViewer) {

        cboFilterModel.removeAllElements();

        hashtable = departmentViewer.getTableHeader();

        setHashtable(hashtable);
        Collection<String> enumeration = getHashtable().values();
        for (String str : enumeration) {
            cboFilterModel.addElement(str);
        }

    }

    @Override
    public void itemStateChanged(ItemEvent e) {
        if (e.getSource() == cboTimkiem) {
            if (cboTimkiem.getSelectedIndex() > -1) {
                String value = cboTimkiem.getSelectedItem().toString().trim();
                if (value.length() != 0) {
                    Set set = hashtable.entrySet();
                    Iterator iterator = set.iterator();
                    while (iterator.hasNext()) {
                        Map.Entry entry = (Entry) iterator.next();
                        if (entry.getValue().toString().equals(value)) {
                            key = Integer.parseInt(entry.getKey().toString());
                        }
                    }
                }
            }
        }
    }
}

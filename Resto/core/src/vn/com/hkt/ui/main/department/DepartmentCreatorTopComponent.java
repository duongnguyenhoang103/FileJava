/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package vn.com.hkt.ui.main.department;

import java.awt.GridLayout;
import java.awt.Insets;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Collection;
import java.util.List;
import java.util.Set;
import javax.swing.JButton;
import javax.swing.JPanel;
import javax.swing.JTable;
import javax.swing.table.TableCellEditor;
import org.openide.util.Exceptions;
import org.openide.util.NbBundle;
import org.openide.windows.TopComponent;
import org.netbeans.api.settings.ConvertAsProperties;
import org.openide.awt.ActionID;
import org.openide.awt.ActionReference;
import org.openide.util.Lookup;
import org.openide.util.lookup.ServiceProvider;
import org.openide.windows.WindowManager;
import vn.com.hkt.pilot.department.viewer.api.CreateKeyDepartment;
import vn.com.hkt.pilot.department.viewer.api.IDepartmentCreater;
import vn.com.hkt.pilot.department.viewer.api.IDepartmentExtCreater;
import vn.com.hkt.pilot.enterprise.viewer.api.IEnableButton;
import vn.com.hkt.pilot.enterprise.viewer.api.IEnableTable;
import vn.com.hkt.pilot.identity.entitiy.api.IEntity;
import vn.com.hkt.pilot.identity.presentation.api.ITopComponent;
import vn.com.hkt.pilot.toobar.api.IResetFontSize;
import vn.com.hkt.ui.main.ui.api.creater.ISaveBasic;
import vn.com.hkt.ui.main.ui.api.creater.ISaveExtention;

/**
 * Top component which displays something.
 */
@ConvertAsProperties(dtd = "-//vn.com.hkt.ui.main.department//DepartmentCreator//EN",
autostore = false)
@TopComponent.Description(preferredID = "DepartmentCreatorTopComponent",
//iconBase="SET/PATH/TO/ICON/HERE", 
persistenceType = TopComponent.PERSISTENCE_ALWAYS)
@TopComponent.Registration(mode = "editor", openAtStartup = false)
@ActionID(category = "Window", id = "vn.com.hkt.ui.main.department.DepartmentCreatorTopComponent")
@ActionReference(path = "Menu/Nhập Số Liệu" /*
 * , position = 333
 */)
@TopComponent.OpenActionRegistration(displayName = "#CTL_DepartmentCreatorAction",
preferredID = "DepartmentCreatorTopComponent")
@ServiceProvider(service = IEnableButton.class)
public final class DepartmentCreatorTopComponent extends TopComponent implements ITopComponent, IEnableButton {

    private JPanel panelBasic = null;
    private JPanel panelSB311 = null;
    private JPanel panelSB312 = null;
    private JPanel panelSB313 = null;
    private JPanel panelSB314 = null;
    private JPanel panelSB32 = null;
    private IDepartmentCreater idc;
    private Collection<? extends IDepartmentExtCreater> idec;
    private static boolean isEdit = false;
    private static boolean isSave = true;
    private DepartmentTutorialCreatorTopComponent tc = (DepartmentTutorialCreatorTopComponent) WindowManager.getDefault().
            findTopComponent("DepartmentTutorialCreatorTopComponent");
    private List<JTable> listtTables = new ArrayList<JTable>();

    public DepartmentCreatorTopComponent() {
        initComponents();
        setName(NbBundle.getMessage(DepartmentCreatorTopComponent.class, "CTL_DepartmentCreatorTopComponent"));
        setToolTipText(NbBundle.getMessage(DepartmentCreatorTopComponent.class, "HINT_DepartmentCreatorTopComponent"));
        panelForm.setLayout(new GridLayout());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        panelForm = new javax.swing.JPanel();
        panelButton = new javax.swing.JPanel();
        buttonEdit = new javax.swing.JButton();
        buttonExit = new javax.swing.JButton();
        buttonHelp = new javax.swing.JButton();
        buttonSaveDS = new javax.swing.JButton();
        buttonSave = new javax.swing.JButton();
        buttonReset = new javax.swing.JButton();

        panelForm.setPreferredSize(new java.awt.Dimension(888, 600));
        panelForm.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                panelFormMousePressed(evt);
            }
        });

        javax.swing.GroupLayout panelFormLayout = new javax.swing.GroupLayout(panelForm);
        panelForm.setLayout(panelFormLayout);
        panelFormLayout.setHorizontalGroup(
            panelFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 888, Short.MAX_VALUE)
        );
        panelFormLayout.setVerticalGroup(
            panelFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 600, Short.MAX_VALUE)
        );

        jScrollPane1.setViewportView(panelForm);

        buttonEdit.setIcon(new javax.swing.ImageIcon(getClass().getResource("/vn/com/hkt/pilot/icon/modify1.png"))); // NOI18N
        org.openide.awt.Mnemonics.setLocalizedText(buttonEdit, org.openide.util.NbBundle.getMessage(DepartmentCreatorTopComponent.class, "DepartmentCreatorTopComponent.buttonEdit.text")); // NOI18N
        buttonEdit.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseExited(java.awt.event.MouseEvent evt) {
                buttonEditMouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                buttonEditMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                buttonEditMouseReleased(evt);
            }
        });
        buttonEdit.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                buttonEditMouseMoved(evt);
            }
        });
        buttonEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonEditActionPerformed(evt);
            }
        });

        buttonExit.setIcon(new javax.swing.ImageIcon(getClass().getResource("/vn/com/hkt/pilot/icon/cancel1.png"))); // NOI18N
        org.openide.awt.Mnemonics.setLocalizedText(buttonExit, org.openide.util.NbBundle.getMessage(DepartmentCreatorTopComponent.class, "DepartmentCreatorTopComponent.buttonExit.text")); // NOI18N
        buttonExit.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseExited(java.awt.event.MouseEvent evt) {
                buttonExitMouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                buttonExitMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                buttonExitMouseReleased(evt);
            }
        });
        buttonExit.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                buttonExitMouseMoved(evt);
            }
        });
        buttonExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonExitActionPerformed(evt);
            }
        });

        buttonHelp.setIcon(new javax.swing.ImageIcon(getClass().getResource("/vn/com/hkt/pilot/icon/help1.png"))); // NOI18N
        org.openide.awt.Mnemonics.setLocalizedText(buttonHelp, org.openide.util.NbBundle.getMessage(DepartmentCreatorTopComponent.class, "DepartmentCreatorTopComponent.buttonHelp.text")); // NOI18N
        buttonHelp.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseExited(java.awt.event.MouseEvent evt) {
                buttonHelpMouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                buttonHelpMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                buttonHelpMouseReleased(evt);
            }
        });
        buttonHelp.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                buttonHelpMouseMoved(evt);
            }
        });
        buttonHelp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonHelpActionPerformed(evt);
            }
        });

        buttonSaveDS.setIcon(new javax.swing.ImageIcon(getClass().getResource("/vn/com/hkt/pilot/icon/save_list1.png"))); // NOI18N
        org.openide.awt.Mnemonics.setLocalizedText(buttonSaveDS, org.openide.util.NbBundle.getMessage(DepartmentCreatorTopComponent.class, "DepartmentCreatorTopComponent.buttonSaveDS.text")); // NOI18N
        buttonSaveDS.setPreferredSize(new java.awt.Dimension(124, 30));
        buttonSaveDS.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                buttonSaveDSMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                buttonSaveDSMouseReleased(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                buttonSaveDSMouseExited(evt);
            }
        });
        buttonSaveDS.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                buttonSaveDSMouseMoved(evt);
            }
        });
        buttonSaveDS.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonSaveDSActionPerformed(evt);
            }
        });

        buttonSave.setIcon(new javax.swing.ImageIcon(getClass().getResource("/vn/com/hkt/pilot/icon/save1.png"))); // NOI18N
        org.openide.awt.Mnemonics.setLocalizedText(buttonSave, org.openide.util.NbBundle.getMessage(DepartmentCreatorTopComponent.class, "DepartmentCreatorTopComponent.buttonSave.text")); // NOI18N
        buttonSave.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseExited(java.awt.event.MouseEvent evt) {
                buttonSaveMouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                buttonSaveMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                buttonSaveMouseReleased(evt);
            }
        });
        buttonSave.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                buttonSaveMouseMoved(evt);
            }
        });
        buttonSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonSaveActionPerformed(evt);
            }
        });

        buttonReset.setIcon(new javax.swing.ImageIcon(getClass().getResource("/vn/com/hkt/pilot/icon/refresh1.png"))); // NOI18N
        org.openide.awt.Mnemonics.setLocalizedText(buttonReset, org.openide.util.NbBundle.getMessage(DepartmentCreatorTopComponent.class, "DepartmentCreatorTopComponent.buttonReset.text")); // NOI18N
        buttonReset.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseExited(java.awt.event.MouseEvent evt) {
                buttonResetMouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                buttonResetMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                buttonResetMouseReleased(evt);
            }
        });
        buttonReset.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                buttonResetMouseMoved(evt);
            }
        });
        buttonReset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonResetActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelButtonLayout = new javax.swing.GroupLayout(panelButton);
        panelButton.setLayout(panelButtonLayout);
        panelButtonLayout.setHorizontalGroup(
            panelButtonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelButtonLayout.createSequentialGroup()
                .addContainerGap(46, Short.MAX_VALUE)
                .addComponent(buttonEdit, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(buttonReset, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(9, 9, 9)
                .addComponent(buttonSave, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(buttonSaveDS, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(buttonExit, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(buttonHelp, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        panelButtonLayout.setVerticalGroup(
            panelButtonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelButtonLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelButtonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(buttonEdit, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(buttonSave, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(buttonSaveDS, javax.swing.GroupLayout.DEFAULT_SIZE, 35, Short.MAX_VALUE)
                    .addComponent(buttonExit, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(buttonHelp, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(buttonReset, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 853, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel1Layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(panelButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addContainerGap())
                .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 853, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 339, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 276, Short.MAX_VALUE)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addComponent(panelButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void buttonEditMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_buttonEditMousePressed

        buttonEdit.setIcon(new javax.swing.ImageIcon(getClass().getResource("/vn/com/hkt/pilot/icon/modify3click.png")));         buttonEdit.setMargin(new Insets(2, 3, 1, 1));     }//GEN-LAST:event_buttonEditMousePressed

    private void buttonEditMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_buttonEditMouseReleased

        buttonEdit.setMargin(new Insets(0, 0, 0, 0));         buttonEdit.setIcon(new javax.swing.ImageIcon(getClass().getResource("/vn/com/hkt/pilot/icon/modify2over.png")));     }//GEN-LAST:event_buttonEditMouseReleased

    private void buttonEditMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_buttonEditMouseExited

        buttonEdit.setIcon(new javax.swing.ImageIcon(getClass().getResource("/vn/com/hkt/pilot/icon/modify1.png")));     }//GEN-LAST:event_buttonEditMouseExited

    private void buttonEditMouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_buttonEditMouseMoved

        buttonEdit.setIcon(new javax.swing.ImageIcon(getClass().getResource("/vn/com/hkt/pilot/icon/modify2over.png")));     }//GEN-LAST:event_buttonEditMouseMoved

    private void buttonExitMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_buttonExitMousePressed

        buttonExit.setIcon(new javax.swing.ImageIcon(getClass().getResource("/vn/com/hkt/pilot/icon/cancel3click.png")));         buttonExit.setMargin(new Insets(2, 3, 1, 1));     }//GEN-LAST:event_buttonExitMousePressed

    private void buttonExitMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_buttonExitMouseReleased

        buttonExit.setIcon(new javax.swing.ImageIcon(getClass().getResource("/vn/com/hkt/pilot/icon/cancel2over.png")));         buttonExit.setMargin(new Insets(0, 0, 0, 0));     }//GEN-LAST:event_buttonExitMouseReleased

    private void buttonExitMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_buttonExitMouseExited

        buttonExit.setIcon(new javax.swing.ImageIcon(getClass().getResource("/vn/com/hkt/pilot/icon/cancel1.png")));     }//GEN-LAST:event_buttonExitMouseExited

    private void buttonExitMouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_buttonExitMouseMoved

        buttonExit.setIcon(new javax.swing.ImageIcon(getClass().getResource("/vn/com/hkt/pilot/icon/cancel2over.png")));     }//GEN-LAST:event_buttonExitMouseMoved

    private void buttonExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonExitActionPerformed
        this.close();     }//GEN-LAST:event_buttonExitActionPerformed

    private void buttonHelpMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_buttonHelpMousePressed

        buttonHelp.setIcon(new javax.swing.ImageIcon(getClass().getResource("/vn/com/hkt/pilot/icon/help3click.png")));         buttonHelp.setMargin(new Insets(2, 3, 1, 1));     }//GEN-LAST:event_buttonHelpMousePressed

    private void buttonHelpMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_buttonHelpMouseReleased

        buttonHelp.setIcon(new javax.swing.ImageIcon(getClass().getResource("/vn/com/hkt/pilot/icon/help2over.png")));         buttonHelp.setMargin(new Insets(0, 0, 0, 0));     }//GEN-LAST:event_buttonHelpMouseReleased

    private void buttonHelpMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_buttonHelpMouseExited

        buttonHelp.setIcon(new javax.swing.ImageIcon(getClass().getResource("/vn/com/hkt/pilot/icon/help1.png")));     }//GEN-LAST:event_buttonHelpMouseExited

    private void buttonHelpMouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_buttonHelpMouseMoved

        buttonHelp.setIcon(new javax.swing.ImageIcon(getClass().getResource("/vn/com/hkt/pilot/icon/help2over.png")));     }//GEN-LAST:event_buttonHelpMouseMoved

    private void buttonSaveDSMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_buttonSaveDSMousePressed

        buttonSaveDS.setIcon(new javax.swing.ImageIcon(getClass().getResource("/vn/com/hkt/pilot/icon/save_list3click.png")));         buttonSaveDS.setMargin(new Insets(2, 3, 1, 1));     }//GEN-LAST:event_buttonSaveDSMousePressed

    private void buttonSaveDSMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_buttonSaveDSMouseReleased

        buttonSaveDS.setIcon(new javax.swing.ImageIcon(getClass().getResource("/vn/com/hkt/pilot/icon/save_list2over.png")));         buttonSaveDS.setMargin(new Insets(0, 0, 0, 0));     }//GEN-LAST:event_buttonSaveDSMouseReleased

    private void buttonSaveDSMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_buttonSaveDSMouseExited

        buttonSaveDS.setIcon(new javax.swing.ImageIcon(getClass().getResource("/vn/com/hkt/pilot/icon/save_list1.png")));     }//GEN-LAST:event_buttonSaveDSMouseExited

    private void buttonSaveDSMouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_buttonSaveDSMouseMoved

        buttonSaveDS.setIcon(new javax.swing.ImageIcon(getClass().getResource("/vn/com/hkt/pilot/icon/save_list2over.png")));     }//GEN-LAST:event_buttonSaveDSMouseMoved

    private void buttonSaveDSActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonSaveDSActionPerformed
        save();
       // this.close();
        TopComponent enterComponent = WindowManager.getDefault().findTopComponent("DepartmentViewerTopComponent");
        enterComponent.open();
        enterComponent.requestActive();
    }//GEN-LAST:event_buttonSaveDSActionPerformed

    private void buttonSaveMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_buttonSaveMousePressed

        buttonSave.setIcon(new javax.swing.ImageIcon(getClass().getResource("/vn/com/hkt/pilot/icon/save3click.png")));         buttonSave.setMargin(new Insets(2, 3, 1, 1));     }//GEN-LAST:event_buttonSaveMousePressed

    private void buttonSaveMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_buttonSaveMouseReleased

        buttonSave.setIcon(new javax.swing.ImageIcon(getClass().getResource("/vn/com/hkt/pilot/icon/save2over.png")));         buttonSave.setMargin(new Insets(0, 0, 0, 0));     }//GEN-LAST:event_buttonSaveMouseReleased

    private void buttonSaveMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_buttonSaveMouseExited

        buttonSave.setIcon(new javax.swing.ImageIcon(getClass().getResource("/vn/com/hkt/pilot/icon/save1.png")));     }//GEN-LAST:event_buttonSaveMouseExited

    private void buttonSaveMouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_buttonSaveMouseMoved

         buttonSave.setIcon(new javax.swing.ImageIcon(getClass().getResource("/vn/com/hkt/pilot/icon/save2over.png")));     }//GEN-LAST:event_buttonSaveMouseMoved

    private void buttonResetMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_buttonResetMousePressed

        buttonReset.setIcon(new javax.swing.ImageIcon(getClass().getResource("/vn/com/hkt/pilot/icon/refresh3click.png")));         buttonReset.setMargin(new Insets(2, 3, 1, 1));     }//GEN-LAST:event_buttonResetMousePressed

    private void buttonResetMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_buttonResetMouseReleased

        buttonReset.setIcon(new javax.swing.ImageIcon(getClass().getResource("/vn/com/hkt/pilot/icon/refresh2over.png")));         buttonReset.setMargin(new Insets(0, 0, 0, 0));     }//GEN-LAST:event_buttonResetMouseReleased

    private void buttonResetMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_buttonResetMouseExited
        buttonReset.setIcon(new javax.swing.ImageIcon(getClass().getResource("/vn/com/hkt/pilot/icon/refresh1.png")));
    }//GEN-LAST:event_buttonResetMouseExited

    private void buttonResetMouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_buttonResetMouseMoved

        buttonReset.setIcon(new javax.swing.ImageIcon(getClass().getResource("/vn/com/hkt/pilot/icon/refresh2over.png")));     }//GEN-LAST:event_buttonResetMouseMoved

    private void buttonResetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonResetActionPerformed
        reset();
    }//GEN-LAST:event_buttonResetActionPerformed

    private void buttonHelpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonHelpActionPerformed
        tc.open();
        tc.requestActive();
    }//GEN-LAST:event_buttonHelpActionPerformed

    private void panelFormMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_panelFormMousePressed

        if (tc.getPanelBasic() == null) {
            tc.getPanelChecbox().removeAll();
            tc.loadFormExtension();
        }
    }//GEN-LAST:event_panelFormMousePressed

    private void buttonEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonEditActionPerformed
        isSave = !isSave;
        setEnableTable();
        changeEnableButtonSave();
    }//GEN-LAST:event_buttonEditActionPerformed

    private void buttonSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonSaveActionPerformed
        save();
        reset();
    }//GEN-LAST:event_buttonSaveActionPerformed
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton buttonEdit;
    private javax.swing.JButton buttonExit;
    private javax.swing.JButton buttonHelp;
    private javax.swing.JButton buttonReset;
    private javax.swing.JButton buttonSave;
    private javax.swing.JButton buttonSaveDS;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JPanel panelButton;
    private javax.swing.JPanel panelForm;
    // End of variables declaration//GEN-END:variables

    @Override
    public void componentOpened() {
        Set<TopComponent> tcs = WindowManager.getDefault().getRegistry().getOpened();
        for (TopComponent tc : tcs) {
            tc.close();
        }
        idc = Lookup.getDefault().lookup(IDepartmentCreater.class);
        idec = Lookup.getDefault().lookupAll(IDepartmentExtCreater.class);
        for (int i = 0; i < idc.getTables().size(); i++) {
            listtTables.add(idc.getTables().get(i));
        }
        if (idc instanceof ISaveBasic) {
            ISaveBasic saveBasic = (ISaveBasic) idc;
            saveBasic.reset();
            for (IDepartmentExtCreater ide : idec) {
                for (JTable tbl : ide.getTables()) {
                    listtTables.add(tbl);
                }
                if (ide instanceof ISaveExtention) {
                    ISaveExtention saveExtention = (ISaveExtention) ide;
                    saveExtention.reset();
                }
            }
        }
        setFocusable();
        tc.open();
        if (idc != null) {
            if (panelBasic == null) {
                panelBasic = idc.getDepartmentCreater();
            }
        }
        if (idec != null) {
            for (IDepartmentExtCreater extCreator : idec) {
                double index = extCreator.getLevelNumber();
                if (index == 3.11) {
                    if (panelSB311 == null) {
                        panelSB311 = extCreator.getDepartmentExtViewer();
                    }
                }
                if (index == 3.12) {
                    if (panelSB312 == null) {
                        panelSB312 = extCreator.getDepartmentExtViewer();
                    }
                }
                if (index == 3.13) {
                    if (panelSB313 == null) {
                        panelSB313 = extCreator.getDepartmentExtViewer();
                    }
                }
                if (index == 3.14) {
                    if (panelSB314 == null) {
                        panelSB314 = extCreator.getDepartmentExtViewer();
                    }
                }
                if (index == 3.2) {
                    if (panelSB32 == null) {
                        panelSB32 = extCreator.getDepartmentExtViewer();
                    }
                }

            }

        }
        loadForm();
        createKey();
        isSave = true;
        isEdit = false;
        changeEnableButtonSave();
        changeEnableButtonEdit();

    }

    @Override
    public void componentClosed() {
        isEdit = false;
        isSave = true;
        tc.close();
        panelForm.removeAll();
    }

    void writeProperties(java.util.Properties p) {
        // better to version settings since initial version as advocated at
        // http://wiki.apidesign.org/wiki/PropertyFiles
        p.setProperty("version", "1.0");
        // TODO store your settings
    }

    void readProperties(java.util.Properties p) {
        String version = p.getProperty("version");
        // TODO read your settings according to their version
    }

    private void save() {
        if (idc instanceof ISaveBasic) {
            ISaveBasic saveBasic = (ISaveBasic) idc;
            IEntity entity = saveBasic.save();
            if (entity != null) {
                for (IDepartmentExtCreater ide : idec) {
                    if (ide instanceof ISaveExtention) {
                        ISaveExtention saveExtention = (ISaveExtention) ide;
                        saveExtention.setEntity(entity);
                        saveExtention.save();
                    }
                }
            }
        }
    }

    private void reset() {
        if (idc instanceof ISaveBasic) {
            ISaveBasic saveBasic = (ISaveBasic) idc;
            saveBasic.reset();

            for (IDepartmentExtCreater ide : idec) {
                if (ide instanceof ISaveExtention) {
                    ISaveExtention saveExtention = (ISaveExtention) ide;
                    saveExtention.reset();
                }
            }
        }

        // Enable cac nut sau khi reset
        isSave = true;
        isEdit = false;
        changeEnableButtonSave();
        changeEnableButtonEdit();

        createKey();
        reLoadFont();
        reLoadSize();
        reLoadColorMouse();
        reLoadColorTitle();
        reLoadColorWord();
        reLoadColorTable();
    }

    public void loadForm() {
        List<JPanel> listPanel = new ArrayList<JPanel>();
        if (tc.getCheckBoxBasic().isSelected()) {
            listPanel.add(panelBasic);
        }
        if (tc.getCheckBoxSB31().isSelected()) {
            listPanel.add(panelSB311);
            listPanel.add(panelSB312);
            listPanel.add(panelSB313);
        }
        if (tc.getCheckBoxSB32().isSelected()) {
            listPanel.add(panelSB32);
        }
        if (tc.getCheckBoxSB31().isSelected()) {
            listPanel.add(panelSB314);
        }

        if (listPanel.size() == 6) {
            panelForm.setLayout(new GridLayout(3, 2, 10, WIDTH));
        }
        if (listPanel.size() == 1 || listPanel.size() == 2) {
            panelForm.setLayout(new GridLayout(WIDTH, WIDTH, 10, WIDTH));
        }


        for (int i = 0; i < listPanel.size(); i++) {
            panelForm.add(listPanel.get(i));
        }
        if (listPanel.size() == 1 || listPanel.size() == 5) {
            JPanel panel = new JPanel();
            panelForm.add(panel);
        }

    }

    public JButton getButtonSave() {
        return buttonSave;
    }

    public JButton getButtonSaveDS() {
        return buttonSaveDS;
    }

    public JButton getButtonEdit() {
        return buttonEdit;
    }

    public JPanel getPanelForm() {
        return panelForm;
    }

    private void createKey() {
         if (idc instanceof CreateKeyDepartment) {
            CreateKeyDepartment saveBasic = (CreateKeyDepartment) idc;
            saveBasic.createKey();
        }
    }

    @Override
    public void reLoadFont() {
        if (idc instanceof IResetFontSize) {
            ((IResetFontSize) idc).resetFont();
        }
        for (IDepartmentExtCreater iexc : idec) {
            if (iexc instanceof IResetFontSize) {
                ((IResetFontSize) iexc).resetFont();
            }
        }
    }

    @Override
    public String getUserInterfaceName() {
        return getClass().getSimpleName();
    }

    @Override
    public String getUserInterfaceDescription() {
        return "giao diện chính tạo mới phòng ban dự án";
    }

    @Override
    public String getModuleName() {
        return "Module core";
    }

    @Override
    public void reLoadColorTable() {
        if (idc instanceof IResetFontSize) {
            ((IResetFontSize) idc).resetColorRowTable();
        }
        for (IDepartmentExtCreater iexc : idec) {
            if (iexc instanceof IResetFontSize) {
                ((IResetFontSize) iexc).resetColorRowTable();
            }
        }
    }

    @Override
    public void reLoadSize() {
        if (idc instanceof IResetFontSize) {
            ((IResetFontSize) idc).resetSize();
        }
        for (IDepartmentExtCreater iexc : idec) {
            if (iexc instanceof IResetFontSize) {
                ((IResetFontSize) iexc).resetSize();
            }
        }
    }

    @Override
    public void reLoadColorWord() {
        if (idc instanceof IResetFontSize) {
            ((IResetFontSize) idc).resetColorWord();
        }
        for (IDepartmentExtCreater iexc : idec) {
            if (iexc instanceof IResetFontSize) {
                ((IResetFontSize) iexc).resetColorWord();
            }
        }
    }

    @Override
    public void reLoadColorTitle() {
        if (idc instanceof IResetFontSize) {
            ((IResetFontSize) idc).resetColorTitle();
        }
        for (IDepartmentExtCreater iexc : idec) {
            if (iexc instanceof IResetFontSize) {
                ((IResetFontSize) iexc).resetColorTitle();
            }
        }
    }

    @Override
    public void reLoadColorMouse() {
        if (idc instanceof IResetFontSize) {
            ((IResetFontSize) idc).resetColorMouse();
        }
        for (IDepartmentExtCreater iexc : idec) {
            if (iexc instanceof IResetFontSize) {
                ((IResetFontSize) iexc).resetColorMouse();
            }
        }
    }

    public void changeEnableButtonSave() {
        TopComponent top = WindowManager.getDefault().getRegistry().getActivated();
        if (top instanceof DepartmentCreatorTopComponent) {
            DepartmentCreatorTopComponent tc1 = (DepartmentCreatorTopComponent) top;
            tc1.getButtonSave().setEnabled(isSave);
            tc1.getButtonSaveDS().setEnabled(isSave);
        }
        buttonSave.setEnabled(isSave);
        buttonSaveDS.setEnabled(isSave);
    }

    public void changeEnableButtonEdit() {
        setEnableTable();
        TopComponent top = WindowManager.getDefault().getRegistry().getActivated();
        if (top instanceof DepartmentCreatorTopComponent) {
            DepartmentCreatorTopComponent tc1 = (DepartmentCreatorTopComponent) top;
            tc1.getButtonEdit().setEnabled(isEdit);
            //else tc1.getButtonEdit().setEnabled(false);
        }

        buttonEdit.setEnabled(isEdit);
    }

    @Override
    public void enableButton() throws IOException {
        isEdit = true;
        isSave = false;
        changeEnableButtonEdit();
        changeEnableButtonSave();
    }

    private void setEnableTable() {
        Collection<? extends IEnableTable> allEnable = Lookup.getDefault().lookupAll(IEnableTable.class);
        for (IEnableTable enable : allEnable) {
            try {
                enable.enableTable(isSave);
            } catch (IOException ex) {
                Exceptions.printStackTrace(ex);
            }
        }
    }

    private void setFocusable() {
        for (int i = 0; i < listtTables.size(); i++) {
            listtTables.get(i).addMouseListener(new MyMouseListener(listtTables.get(i), listtTables));
        }
        buttonEdit.addMouseListener(new MyMouseListener(null, listtTables));
        buttonExit.addMouseListener(new MyMouseListener(null, listtTables));
        buttonHelp.addMouseListener(new MyMouseListener(null, listtTables));
        buttonReset.addMouseListener(new MyMouseListener(null, listtTables));
        buttonSave.addMouseListener(new MyMouseListener(null, listtTables));
        buttonSaveDS.addMouseListener(new MyMouseListener(null, listtTables));

    }
}

class MyMouseListener extends MouseAdapter {

    private JTable table = null;
    private List<JTable> listtTables;

    public MyMouseListener(JTable table, List<JTable> listtTables) {
        this.table = table;
        this.listtTables = listtTables;
    }

    @Override
    public void mousePressed(MouseEvent e) {
        for (int j = 0; j < listtTables.size(); j++) {
            if (listtTables.get(j) != table) {
                TableCellEditor tce = listtTables.get(j).getCellEditor();
                if (tce != null) {
                    tce.stopCellEditing();
                }
            } else {
                if (table != null) {
                    table.setCellSelectionEnabled(true);
                    table.setRowSelectionAllowed(true);
                    table.setColumnSelectionAllowed(true);
                    table.changeSelection(table.getSelectedRow(), table.getSelectedColumn(), false, false);
                    table.requestFocus();
                }
            }
        }
    }
}

/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package vn.com.hkt.ui.main.product;

import java.awt.BorderLayout;
import java.awt.Dimension;
import java.awt.GridLayout;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.Collection;
import javax.swing.*;
import org.openide.util.NbBundle;
import org.openide.windows.TopComponent;
import org.netbeans.api.settings.ConvertAsProperties;
import org.openide.awt.ActionID;
import org.openide.awt.ActionReference;
import org.openide.util.Lookup;
import org.openide.util.lookup.ServiceProvider;
import org.openide.windows.WindowManager;
import vn.com.hkt.pilot.enterprise.viewer.api.IEnterpriseHelp;
import vn.com.hkt.pilot.product.viewer.api.HelpTutorialProduct;
import vn.com.hkt.pilot.product.viewer.api.IProductCreater;
import vn.com.hkt.pilot.product.viewer.api.IProductExtCreater;

/**
 * Top component which displays something.
 */
@ConvertAsProperties(dtd = "-//vn.com.hkt.ui.main.product//ProductTutorialCreator//EN",
autostore = false)
@TopComponent.Description(preferredID = "ProductTutorialCreatorTopComponent",
//iconBase="SET/PATH/TO/ICON/HERE", 
persistenceType = TopComponent.PERSISTENCE_ALWAYS)
@TopComponent.Registration(mode = "properties", openAtStartup = false)
@ActionID(category = "Window", id = "vn.com.hkt.ui.main.product.ProductTutorialCreatorTopComponent")
@ActionReference(path = " " /*
 * , position = 333
 */)
@TopComponent.OpenActionRegistration(displayName = "#CTL_ProductTutorialCreatorAction",
preferredID = "ProductTutorialCreatorTopComponent")
@ServiceProvider(service = HelpTutorialProduct.class)
public final class ProductTutorialCreatorTopComponent extends TopComponent implements HelpTutorialProduct, ActionListener {

    private JPanel panel04 = null;
    private JPanel panel418 = null;
    private JPanel panel417 = null;
    private JPanel panel419 = null;
    private JPanel panelStatus = null;

    public JPanel getPanel04() {
        return panel04;
    }
    private JPanel panel43 = null;
    private Collection<? extends IProductExtCreater> productExtCreater;
    private IProductCreater productCreater;
    private JCheckBox checkBoxSB04 = null, checBoxSB41 = null, checkBoxSB43 = null;
    private Collection<? extends IEnterpriseHelp> enterpriseHelp = Lookup.getDefault().lookupAll(IEnterpriseHelp.class);
    private JPanel panelEditID = null;
    private JLabel label = new JLabel("           Hướng Dẫn Sử Dụng");
    private JTabbedPane tabbedPane = new JTabbedPane();
    private JTextArea textArea = new JTextArea();
    private JPanel panelEditCounty = null;

    public JCheckBox getCheckBoxSB04() {
        return checkBoxSB04;
    }

    public JCheckBox getChecBoxSB41() {
        return checBoxSB41;
    }

    public JCheckBox getCheckBoxSB43() {
        return checkBoxSB43;
    }

    public ProductTutorialCreatorTopComponent() {
        initComponents();
        setName(NbBundle.getMessage(ProductTutorialCreatorTopComponent.class, "CTL_ProductTutorialCreatorTopComponent"));
        setToolTipText(NbBundle.getMessage(ProductTutorialCreatorTopComponent.class, "HINT_ProductTutorialCreatorTopComponent"));
        productCreater = Lookup.getDefault().lookup(IProductCreater.class);
        productExtCreater = Lookup.getDefault().lookupAll(IProductExtCreater.class);
        if (panelEditID == null && panelStatus == null && panelEditCounty == null) {
            loadFormExtension();
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panelExtension = new javax.swing.JPanel();
        panelChecbox = new javax.swing.JPanel();
        panelButton = new javax.swing.JPanel();
        buttonAn = new javax.swing.JButton();

        javax.swing.GroupLayout panelChecboxLayout = new javax.swing.GroupLayout(panelChecbox);
        panelChecbox.setLayout(panelChecboxLayout);
        panelChecboxLayout.setHorizontalGroup(
            panelChecboxLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 247, Short.MAX_VALUE)
        );
        panelChecboxLayout.setVerticalGroup(
            panelChecboxLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 233, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout panelExtensionLayout = new javax.swing.GroupLayout(panelExtension);
        panelExtension.setLayout(panelExtensionLayout);
        panelExtensionLayout.setHorizontalGroup(
            panelExtensionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelExtensionLayout.createSequentialGroup()
                .addComponent(panelChecbox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(359, Short.MAX_VALUE))
        );
        panelExtensionLayout.setVerticalGroup(
            panelExtensionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panelChecbox, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        org.openide.awt.Mnemonics.setLocalizedText(buttonAn, org.openide.util.NbBundle.getMessage(ProductTutorialCreatorTopComponent.class, "ProductTutorialCreatorTopComponent.buttonAn.text")); // NOI18N
        buttonAn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonAnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelButtonLayout = new javax.swing.GroupLayout(panelButton);
        panelButton.setLayout(panelButtonLayout);
        panelButtonLayout.setHorizontalGroup(
            panelButtonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelButtonLayout.createSequentialGroup()
                .addContainerGap(483, Short.MAX_VALUE)
                .addComponent(buttonAn, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(29, 29, 29))
        );
        panelButtonLayout.setVerticalGroup(
            panelButtonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelButtonLayout.createSequentialGroup()
                .addContainerGap(19, Short.MAX_VALUE)
                .addComponent(buttonAn)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panelButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(panelExtension, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(panelExtension, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(panelButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void buttonAnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonAnActionPerformed
        ProductCreatorTopComponent tc = (ProductCreatorTopComponent) WindowManager.getDefault().findTopComponent("ProductCreatorTopComponent");
        tc.requestActive();
    }//GEN-LAST:event_buttonAnActionPerformed
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton buttonAn;
    private javax.swing.JPanel panelButton;
    private javax.swing.JPanel panelChecbox;
    private javax.swing.JPanel panelExtension;
    // End of variables declaration//GEN-END:variables

    @Override
    public void componentOpened() {
        if (panelEditID == null && panelStatus == null && panelEditCounty == null) {
            loadFormExtension();
        }
        if (checBoxSB41 != null) {
            checBoxSB41.addActionListener(this);
        }
        if (checkBoxSB43 != null) {
            checkBoxSB43.addActionListener(this);
        }
    }

    @Override
    public void componentClosed() {
    }

    void writeProperties(java.util.Properties p) {
        // better to version settings since initial version as advocated at
        // http://wiki.apidesign.org/wiki/PropertyFiles
        p.setProperty("version", "1.0");
        // TODO store your settings
    }

    void readProperties(java.util.Properties p) {
        String version = p.getProperty("version");
        // TODO read your settings according to their version
    }

    public void loadFormExtension() {

        panelChecbox.setLayout(new GridLayout(10, 1));
        if (productCreater != null) {
            if (panel04 == null) {
                panel04 = productCreater.getProductCreater();
                checkBoxSB04 = new JCheckBox(panel04.toString());
                checkBoxSB04.setSelected(true);
                checkBoxSB04.setEnabled(false);
                panelChecbox.add(checkBoxSB04);
            }
        } else {
            // panelChecbox.remove(checkBoxBasic);
        }
        if (productExtCreater != null) {
            for (IProductExtCreater extCreator : productExtCreater) {
                double index = extCreator.getLevelNumber();
                if (index == 4.18) {
                    if (panel418 == null) {
                        panel418 = extCreator.getProductExtCreater();
                        checBoxSB41 = new JCheckBox(panel418.toString());
                        panelChecbox.add(checBoxSB41);
                        checBoxSB41.setSelected(true);
                    }
                }
                if (index == 4.19) {
                    if (panel419 == null) {
                        panel419 = extCreator.getProductExtCreater();
                    }
                }
                if (index == 4.17) {
                    if (panel417 == null) {
                        panel417 = extCreator.getProductExtCreater();
                    }
                }
                if (index == 4.3) {
                    if (panel43 == null) {
                        panel43 = extCreator.getProductExtCreater();
                        checkBoxSB43 = new JCheckBox(panel43.toString());
                        panelChecbox.add(checkBoxSB43);
                        checkBoxSB43.setSelected(true);
                    }
                }
            }
            panelEditID = null;
            panelStatus = null;
            panelEditCounty = null;
        } else {
            // panelChecbox.remove(checBoxEx1);
        }
    }

    @Override
    public void actionPerformed(ActionEvent e) {
        JCheckBox checkBox = (JCheckBox) e.getSource();
        ProductCreatorTopComponent tc = (ProductCreatorTopComponent) WindowManager.getDefault().findTopComponent("ProductCreatorTopComponent");
        if (checkBox == checBoxSB41) {
            tc.getPanelForm().removeAll();
            tc.loadForm();
        }
        if (checkBox == checkBoxSB43) {
            tc.getPanelForm().removeAll();
            tc.loadForm();
        }
    }

    public void loadFormID() {
        panelChecbox.setLayout(new GridLayout());
        if (enterpriseHelp != null) {
            for (IEnterpriseHelp help : enterpriseHelp) {
                double index = help.getLevelNumber();
                if (index == 4.1) {
                    if (panelEditID == null) {
                        panelEditID = help.getPanel1();

                        panelChecbox.add(panelEditID);
                        panel04 = null;
                        panel417 = null;
                        panel418 = null;
                        panel43 = null;
                        panel419 = null;
                    }
                }
            }
        }
        panelEditID = null;
        panelStatus = null;
        panelEditCounty = null;
    }

    public void loadFormStatus() {
        panelChecbox.setLayout(new GridLayout());
        if (enterpriseHelp != null) {
            for (IEnterpriseHelp help : enterpriseHelp) {
                double index = help.getLevelNumber();
                if (index == 4.48) {
                    if (panelStatus == null) {
                        panelStatus = help.getPanel1();

                        panelChecbox.add(panelStatus);
                        panel04 = null;
                        panel417 = null;
                        panel418 = null;
                        panel43 = null;
                        panel419 = null;
                    }
                }
            }
        }
        panelEditID = null;
        panelStatus = null;
        panelEditCounty = null;
    }

    public void loadFormAddr() {
        panelChecbox.setLayout(new GridLayout());
        if (enterpriseHelp != null) {
            for (IEnterpriseHelp help : enterpriseHelp) {
                double index = help.getLevelNumber();
                if (index == 1.2) {
                    if (panelEditCounty == null) {
                        panelEditCounty = help.getPanel1();

                        panelChecbox.add(panelEditCounty);
                        panel04 = null;
                        panel417 = null;
                        panel418 = null;
                        panel43 = null;
                        panel419 = null;
                    }
                }
            }
        }
        panelEditID = null;
        panelStatus = null;
        panelEditCounty = null;
    }

    public JPanel getPanelChecbox() {
        return panelChecbox;
    }

    private void loadFormTutorial(String str) {
        panelChecbox.setLayout(new BorderLayout());
        panelChecbox.add(label, BorderLayout.NORTH);
        label.setPreferredSize(new Dimension(WIDTH, 40));
        textArea.setText(str);
        textArea.setEditable(false);
        textArea.setPreferredSize(new Dimension(500, WIDTH));
        panelChecbox.add(textArea, BorderLayout.CENTER);
        panel04 = null;
        panel417 = null;
        panel418 = null;
        panel43 = null;
        panel419 = null;
        panelEditID = null;
        panelStatus = null;
        panelEditCounty = null;
    }

    @Override
    public void getTutorial(double i, String str) {
        ProductTutorialCreatorTopComponent tc =
                (ProductTutorialCreatorTopComponent) WindowManager.getDefault().findTopComponent("ProductTutorialCreatorTopComponent");
        if (i == 0.1) {
            if (panelEditID == null) {
                tc.getPanelChecbox().removeAll();
                tc.loadFormID();
            }
        }
        if (i == 1.33) {
            if (panelStatus == null) {
                tc.getPanelChecbox().removeAll();
                tc.loadFormStatus();
            }
        }
        if (i == 1.1) {
            if (panelEditCounty == null) {
                tc.getPanelChecbox().removeAll();
                tc.loadFormAddr();
            }
        }
        if (i == 0.2 || i == 0 || i == 0.3 || i == 0.4 || i == 0.5
                ||i==2.23||i==2.01||i==2.21||i==2.31||i==2.41
                ||i==3.21 // sb 41-w47
                ||i==1.10||i==1.11
                ||i==4.01||i==4.03||i==4.11||i==4.13||i==4.21||i==4.23||i==4.31// sb 43-w52  
                ) {
            if (panelEditID == null) {
                tc.getPanelChecbox().removeAll();
                tc.loadFormTutorial(str);
            }

        }
    }
}

/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package vn.com.hkt.ui.main.department;

import java.awt.BorderLayout;
import java.awt.Dimension;
import java.awt.GridLayout;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.Collection;
import javax.swing.*;
import org.openide.util.NbBundle;
import org.openide.windows.TopComponent;
import org.netbeans.api.settings.ConvertAsProperties;
import org.openide.awt.ActionID;
import org.openide.awt.ActionReference;
import org.openide.util.Lookup;
import org.openide.util.lookup.ServiceProvider;
import org.openide.windows.WindowManager;
import vn.com.hkt.pilot.department.viewer.api.HelpTutorialDepartment;
import vn.com.hkt.pilot.department.viewer.api.IDepartmentCreater;
import vn.com.hkt.pilot.department.viewer.api.IDepartmentExtCreater;
import vn.com.hkt.pilot.enterprise.viewer.api.IEnterpriseHelp;

/**
 * Top component which displays something.
 */
@ConvertAsProperties(dtd = "-//vn.com.hkt.ui.main.department//DepartmentTutorialCreator//EN",
autostore = false)
@TopComponent.Description(preferredID = "DepartmentTutorialCreatorTopComponent",
//iconBase="SET/PATH/TO/ICON/HERE", 
persistenceType = TopComponent.PERSISTENCE_ALWAYS)
@TopComponent.Registration(mode = "properties", openAtStartup = false)
@ActionID(category = "Window", id = "vn.com.hkt.ui.main.department.DepartmentTutorialCreatorTopComponent")
@ActionReference(path = " " /*
 * , position = 333
 */)
@TopComponent.OpenActionRegistration(displayName = "#CTL_DepartmentTutorialCreatorAction",
preferredID = "DepartmentTutorialCreatorTopComponent")
@ServiceProvider(service = HelpTutorialDepartment.class)
public final class DepartmentTutorialCreatorTopComponent extends TopComponent implements HelpTutorialDepartment, ActionListener {

    private JPanel panelBasic = null;
    private JPanel panelSB311 = null;
    private JPanel panelStatus = null;
    private JPanel panelMisstion = null;

    public JCheckBox getCheckBoxSB31() {
        return checkBoxSB31;
    }

    public JCheckBox getCheckBoxSB32() {
        return checkBoxSB32;
    }
    private JPanel panelSB32 = null;
    private IDepartmentCreater departmentCreater;
    private JPanel panelEditID = null;
    private Collection<? extends IDepartmentExtCreater> departmentExtCreaters;
    private JCheckBox checkBoxBasic = null, checkBoxSB31 = null, checkBoxSB32 = null;
    private JLabel label = new JLabel("           Hướng Dẫn Sử Dụng");
    private JTabbedPane tabbedPane = new JTabbedPane();
    private JTextArea textArea = new JTextArea();
    private Collection<? extends IEnterpriseHelp> enterpriseHelp = Lookup.getDefault().lookupAll(IEnterpriseHelp.class);

    public DepartmentTutorialCreatorTopComponent() {
        initComponents();
        setName(NbBundle.getMessage(DepartmentTutorialCreatorTopComponent.class, "CTL_DepartmentTutorialCreatorTopComponent"));
        setToolTipText(NbBundle.getMessage(DepartmentTutorialCreatorTopComponent.class, "HINT_DepartmentTutorialCreatorTopComponent"));
        departmentCreater = Lookup.getDefault().lookup(IDepartmentCreater.class);
        departmentExtCreaters = Lookup.getDefault().lookupAll(IDepartmentExtCreater.class);
        if (panelEditID == null && panelMisstion == null && panelStatus == null) {
            loadFormExtension();
        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        panelExtension = new javax.swing.JPanel();
        panelChecbox = new javax.swing.JPanel();
        panelButton = new javax.swing.JPanel();
        buttonAn = new javax.swing.JButton();

        javax.swing.GroupLayout panelChecboxLayout = new javax.swing.GroupLayout(panelChecbox);
        panelChecbox.setLayout(panelChecboxLayout);
        panelChecboxLayout.setHorizontalGroup(
            panelChecboxLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 247, Short.MAX_VALUE)
        );
        panelChecboxLayout.setVerticalGroup(
            panelChecboxLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 254, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout panelExtensionLayout = new javax.swing.GroupLayout(panelExtension);
        panelExtension.setLayout(panelExtensionLayout);
        panelExtensionLayout.setHorizontalGroup(
            panelExtensionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelExtensionLayout.createSequentialGroup()
                .addComponent(panelChecbox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(167, Short.MAX_VALUE))
        );
        panelExtensionLayout.setVerticalGroup(
            panelExtensionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panelChecbox, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        org.openide.awt.Mnemonics.setLocalizedText(buttonAn, org.openide.util.NbBundle.getMessage(DepartmentTutorialCreatorTopComponent.class, "DepartmentTutorialCreatorTopComponent.buttonAn.text")); // NOI18N
        buttonAn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonAnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelButtonLayout = new javax.swing.GroupLayout(panelButton);
        panelButton.setLayout(panelButtonLayout);
        panelButtonLayout.setHorizontalGroup(
            panelButtonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelButtonLayout.createSequentialGroup()
                .addContainerGap(291, Short.MAX_VALUE)
                .addComponent(buttonAn, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(29, 29, 29))
        );
        panelButtonLayout.setVerticalGroup(
            panelButtonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelButtonLayout.createSequentialGroup()
                .addContainerGap(19, Short.MAX_VALUE)
                .addComponent(buttonAn)
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 434, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel1Layout.createSequentialGroup()
                    .addContainerGap()
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(panelButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(panelExtension, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addContainerGap()))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 335, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel1Layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(panelExtension, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addComponent(panelButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap()))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void buttonAnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonAnActionPerformed
        DepartmentCreatorTopComponent tc = (DepartmentCreatorTopComponent) WindowManager.getDefault().findTopComponent("DepartmentCreatorTopComponent");
        tc.requestActive();
    }//GEN-LAST:event_buttonAnActionPerformed
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton buttonAn;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel panelButton;
    private javax.swing.JPanel panelChecbox;
    private javax.swing.JPanel panelExtension;
    // End of variables declaration//GEN-END:variables

    @Override
    public void componentOpened() {
        loadFormExtension();
        checkBoxSB31.addActionListener(this);
        checkBoxSB32.addActionListener(this);
    }

    @Override
    public void componentClosed() {

    }

    void writeProperties(java.util.Properties p) {
        // better to version settings since initial version as advocated at
        // http://wiki.apidesign.org/wiki/PropertyFiles
        p.setProperty("version", "1.0");
        // TODO store your settings
    }

    void readProperties(java.util.Properties p) {
        String version = p.getProperty("version");
        // TODO read your settings according to their version
    }

    public void loadFormExtension() {
        panelChecbox.setLayout(new GridLayout(10, 1));
        if (departmentCreater != null) {
            if (panelBasic == null) {
                panelBasic = departmentCreater.getDepartmentCreater();
                checkBoxBasic = new JCheckBox(panelBasic.toString());
                checkBoxBasic.setSelected(true);
                checkBoxBasic.setEnabled(false);
                panelChecbox.add(checkBoxBasic);
            }
        }
        if (departmentExtCreaters != null) {
            for (IDepartmentExtCreater extCreator : departmentExtCreaters) {
                double index = extCreator.getLevelNumber();
                if (index == 3.11) {
                    if (panelSB311 == null) {
                        panelSB311 = extCreator.getDepartmentExtViewer();
                        checkBoxSB31 = new JCheckBox(panelSB311.toString());
                        checkBoxSB31.setSelected(true);
                        panelChecbox.add(checkBoxSB31);
                    }
                }
                if (index == 3.2) {
                    if (panelSB32 == null) {
                        panelSB32 = extCreator.getDepartmentExtViewer();
                        checkBoxSB32 = new JCheckBox(panelSB32.toString());
                        checkBoxSB32.setSelected(true);
                        panelChecbox.add(checkBoxSB32);
                    }
                }

            }

        }
        panelEditID = null;
        panelStatus = null;
        panelMisstion = null;
    }

    public JPanel getPanelBasic() {
        return panelBasic;
    }

    public void loadFormID() {
        panelChecbox.setLayout(new GridLayout());
        if (enterpriseHelp != null) {
            for (IEnterpriseHelp help : enterpriseHelp) {
                double index = help.getLevelNumber();
                if (index == 3.1) {
                    if (panelEditID == null) {
                        panelEditID = help.getPanel1();

                        panelChecbox.add(panelEditID);
                        panelSB311 = null;
                        panelSB32 = null;
                        panelBasic = null;
                    }
                }
            }
        }
        panelEditID = null;
        panelStatus = null;
        panelMisstion = null;
    }

    public void loadFormMisstion() {
        panelChecbox.setLayout(new GridLayout());
        if (enterpriseHelp != null) {
            for (IEnterpriseHelp help : enterpriseHelp) {
                double index = help.getLevelNumber();
                if (index == 1.3) {
                    if (panelMisstion == null) {
                        panelMisstion = help.getPanel1();

                        panelChecbox.add(panelMisstion);
                        panelSB311 = null;
                        panelSB32 = null;
                        panelBasic = null;
                    }
                }
            }
        }
        panelEditID = null;
        panelStatus = null;
        panelMisstion = null;
    }

    public void loadFormSattaus() {
        panelChecbox.setLayout(new GridLayout());
        if (enterpriseHelp != null) {
            for (IEnterpriseHelp help : enterpriseHelp) {
                double index = help.getLevelNumber();
                if (index == 3.2) {
                    if (panelStatus == null) {
                        panelStatus = help.getPanel1();

                        panelChecbox.add(panelStatus);
                        panelSB311 = null;
                        panelSB32 = null;
                        panelBasic = null;
                    }
                }
            }
        }
        panelEditID = null;
        panelStatus = null;
    }

    private void loadFormTutorial(String str) {
        panelChecbox.setLayout(new BorderLayout());
        panelChecbox.add(label, BorderLayout.NORTH);
        label.setPreferredSize(new Dimension(WIDTH, 40));
        textArea.setText(str);
        textArea.setEditable(false);
        textArea.setPreferredSize(new Dimension(500, HEIGHT));
        panelChecbox.add(textArea, BorderLayout.CENTER);
        panelSB311 = null;
        panelSB32 = null;
        panelBasic = null;
        panelEditID = null;
        panelStatus = null;
    }

    public JCheckBox getCheckBoxBasic() {
        return checkBoxBasic;
    }

    @Override
    public void actionPerformed(ActionEvent e) {
        JCheckBox checkBox = (JCheckBox) e.getSource();
        DepartmentCreatorTopComponent tc = (DepartmentCreatorTopComponent) WindowManager.getDefault().findTopComponent("DepartmentCreatorTopComponent");
        if (checkBox == checkBoxSB31) {
            tc.getPanelForm().removeAll();
            tc.loadForm();
        }
        if (checkBox == checkBoxSB32) {
            tc.getPanelForm().removeAll();
            tc.loadForm();
        }
    }

    @Override
    public void getTutorial(double i, String str) {
        DepartmentTutorialCreatorTopComponent tc =
                (DepartmentTutorialCreatorTopComponent) WindowManager.getDefault().findTopComponent("DepartmentTutorialCreatorTopComponent");
        if (i == 0.1) {
            if (panelEditID == null) {
                tc.getPanelChecbox().removeAll();
                tc.loadFormID();
            }

        }
        if (i == 1.01) {
            if (panelStatus == null) {
                tc.getPanelChecbox().removeAll();
                tc.loadFormSattaus();
            }
        }
        if (i == 3.1) {
            if (panelMisstion == null) {
                tc.getPanelChecbox().removeAll();
                tc.loadFormMisstion();
            }
        }
        if (i == 0.2 || i == 0 || i == 0.3 || i == 0.4 || i == 0.5
                || i == 1.11 || i == 1.13 || i == 1.21 || i == 1.23 || i == 1.31 || i == 1.33
                || i == 2.21
                || i == 3.0 || i == 3.2// sb31- w43
                || i == 5.0 || i == 5.1// sb 31- w44 
                || i == 2.01 || i == 2.03 || i == 2.11 || i == 2.13 || i == 2.21// sb 32- w43
                ) {
            if (panelEditID == null) {
                tc.getPanelChecbox().removeAll();
                tc.loadFormTutorial(str);
            }

        }
    }

    public JPanel getPanelChecbox() {
        return panelChecbox;
    }
}
